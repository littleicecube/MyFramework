package com.palace.experience.blog;

import org.junit.Test;

import com.palace.seeds.utils.MovPrint;

public class Address {
	
/**
 * 
 
在32位模式下
每个程序在编译完成后都会有4GB可寻址的内存空间,我们在编写c语言程序时能获取到一个变量的内存地址并打印出来,这个时候的内存地址并不是真实的物理内存地址,
而是程序在编译完成后逻辑意义上的地址,而这个逻辑意义上的地址空间大小是4GB,但是这4GB并不是真实可用的物理内存地址空间.如果每个程序都有4GB真实可用的
物理地址空间,那么我们装有4GB物理内存的计算机同一时刻就只能运行一个程序,实际中我们的计算机中运行了成百上千个程序,为保证多个进程能同时运行操作系统中完成了
从线性地址(暂时忽略程序逻辑地址到线性地址的映射关系,假设程序的逻辑地址就是程序运行时的线性地址)到物理地址的映射关系的维护.

线性地址空间的体现:
线性地址空间提现在编译完成后的可执行程序中,编译完成后的可执行程序是按一定先后顺序编排完成的,通常情况下划分有代码段,数据段和堆栈段

程序启动时,操作系统加载程序加载可执行文件并按照一定的规则进行解析,创建一个进程控制块,进程控制块是操作系统在分配的内存上维护的一个数据结构,数据结构中保存了
程序的入口地址,段基地址,段限长,权限,和其他的运行时信息.linux上一般是按照ELF格式解析可执行程序加载到内存中

操作系统为每个进程维护了一套内存映射关系表,用来把可执行程序中的线性地址转换成真实的物理地址
1)获取一行可执行程序代码的的线性地址
2)获取当前进程的内存关系映射表(页目录页表),根据线性地址通过映射关系转换获取真实的物理地址
3)获取真实物理地址处的内容并执行


1K = 2^10 = 1024
1M = 2^20 = 2^10 * 2^10 = 1024 * 1024
1G = 2^30 = 2^10 * 2^10 * 2^10 = 2014 * 1024 * 1024
4G = 2^32 = 2^10 * 2^10 * 2^10 * 2^2 = 1024 * 1024 * 1024 * 4 
 一根地址线寻址一个地址,地址有8bit称为一个字节 1B
32根地址线有2^32种可能,每一种可能寻址一个字节即1B,那么32根地址线共可以寻址2^32 * 1B = 4GB

32位模式下应用程序编译完成后的可寻址空间为2^32即4GB,此处暂时不在区分虚拟地址还是线性地址,统一认为程序编译后的地址空间为线性地址空间.在线性地址申请空间时
是按页分配的,通常情况下一页内存的大小是4KB(2^12=4KB),4GB的内存空间共有4GB/4KB = 4^30 / 4^10 = 2^20 = 1M个4KB的页面,1M个页面称为页表
将1M个页面按每组1K=1024个大小进行划分那么1M/1K=2^20/2^10=2^10组,那么将会有1024个组,1024个组称为页目录

1个页目录项 *1024个页表项 *4KB内存大小 = 1 * 2^10 * 2^2 * 2^10 *1B = 4MB内存,1个页目录项能表达4MB的内存地址空间
1024个页目录项 *1024个页表项 *4KB内存大小 = 2^10 * 2^10 * 2^2 * 2^10 *1B = 4GB内存,1024个页目录项能表达4GB的内存地址空间

页目录和页表是占用真实的物理内存的,因为页目录项和页表项中的内容(物理地址)需要能寻址到4G内存的任何地方,故每个页目录项或每个页表项占用32位4B的物理内存

每一个页目录项占用32位4字节大小的内存,1024个页目录项占用物理内存的大小:1024*4B = 4KB
每一个页表项同样也占用32位4字节大小的内存,一组页表有1024个页表项,一组页表占用物理内存的大小:1024*4B = 4KB
1024个页目录项代表1024组页表,一组页表4KB,1024组页表*4KB =1024*1024*4B=4MB
总的页目录项和页表项占用的物理内存空间大小为:1024项页目录项*4B + 1024*1024项页表项*4B = 4KB+4MB  
如果为每个进程创建完整的页目录和页表项,将会占用过多的物理内存,在实际情况中,每个进程都不是完全利用了4GB的线性地址空间,故不需要创建完整的页目录和页表的映射关系
而是在运行时根据需要创建对应的页目录和页表并进行映射操作

                       页目录表:每一项大小32位4字节	                                     页表:每一项大小32位4字节,1024个为一组                               真实的物理内存页:每页大小4KB
			+-------------------------------------=+ 第1个页表项                 +---------------------------------------+----+                       +------------------------------------------+----+
			|第1组页表的物理基地址(32位,4字节)		+----------------------------->  第1个4KB内存页的物理基地址           +---------------------------->                                          |    |
			+-------------------------------------+ 第1025个页表项              +---------------------------------------+    |                       +------------------------------------------+    |
			|第2组页表的物理基地址                +---------------------------+ |  ......                               |  共1024项                  |                                          |    |
			+-------------------------------------+ 第(1023*1024+1)个页表项   | +---------------------------------------+    |                       +------------------------------------------+   4KB
			|......                               +-------------------------+ | |  (32位,4字节)                         |    |                       |                                          |    |
			+-------------------------------------+                         | | +---------------------------------------+----+                       +------------------------------------------+    |
			| 第1023组页表的物理基地址            |                         | |                                                                      |                                          |    |
			+-------------------------------------+                         | |                                                                      +------------------------------------------+----+
			|第1024组页表的物理基地址             |                         | |
			+-------------------------------------+                         | | +---------------------------------------+----+
			                                                                | +-> 第1025个4KB内存页的物理基地址         +------------------------+
			                                                                |   +---------------------------------------+    |                   |   +------------------------------------------+----+
			                                                                |   | ......                                | 共1024项               +--->                                          |    |
			                                                                |   +---------------------------------------+    |                       +------------------------------------------+    |
			                                                                |   |                                       |    |                       |                                          |    |
			                                                                |   +---------------------------------------+----+                       +------------------------------------------+   4KB
			                                                                |                                                                        |                                          |    |
			                                                                |                                                                        +------------------------------------------+    |
			                                                                |                                                                        |                                          |    |
			                                                                |   +---------------------------------------+----+                       +------------------------------------------+----+
			                                                                +--->                                       |    |
			                                                                    +---------------------------------------+    |
			                                                                    | ......                                | 共 1024项
			                                                                    +---------------------------------------+    |
			                                                                    |                                       |    |
			                                                                    +---------------------------------------+----+
			




分配物理内存时是页为单位的,一页内存大小是
 线 性 地 址 :0x00402001  二 进 制 形 式 : 0000000001,0000000010,000000000001
+---------------------------------+-----------------------------------------+-----------------------------------------------+
|        0000000001(高 10位)        |                0000000010(中间10位)       |                   000000000001(低 12位)         |
+----------------------+----------+-------------------------+---------------+-----------------------+-----------------------+
                       |                                    |                                       |
                                               获取页目录表中的第2个页目录项                                                     获取页表中的第3个页表项                                          					|
                       |                                    |                                       |
                       |                                    |                                       |
当前进程的页目录表在   		   |                                    |                                       |
物理内存中的基地址     		   |         页目录表项,存储着页表      			|                                       |
                       |         在物理内存中的基地址       			|                                       |
 cr3寄存器             		   |                                    |                                       |          +-----------+
+-----------------+    |           页目录                   				|                                       |          |           |
|页目录物理基地址		  |    |         +---------------+          |                                       |          +-----------+
+-------+---------+    | 目录表第1项 |               |          |              页表                    				|          |           |
        |              |         +---------------+          |         +---------------+             |          +-----------+
        +--------------v--------->页表物理基地址		 +-+        | 页表第1项     |               |             |          |           |
             	根据页目录的物理基地址加   +---------------+ |        |         +---------------+             |          +-----------+
        		上线性地址中指定的页目录   |               | |        | 页表第2项     |               |             |          |           |
        		的偏移量   			 +---------------+ |        |         +---------------+             |          +------------------+
        					 	 |               | +--------v--------->内存物理地址   	  +-------------v---------->           |      |
                                 +---------------+                    +---------------+                        +-----------+      |
                                                   		从页目录项中得到一      |               | 根据页表项中存储的物理 		   |           |
                                                   		个页表在物理内存中      +---------------+ 基地址加上线性地址中指 		   +-----------+     4KB
                                                   		的基地址加上线性地                  				 定的偏移量,得到最终分配	   |           |
                                                   		址中指定的页表的偏                   				的一页内存的基地址     		   +-----------+      |
                                                   		移量                                                        								   |           |      |
                                                                                                               +------------------+
                                                                                                               |           |
                                                                                                               +-----------+
                                                                                                               |           |
                                                                                                               +-----------+
                                                                                                               |           |
                                                                                                               +-----------+
                                                                                                               |           |
                                                                                                               +-----------+
关于不同程序相同线性地址的问题:
不同两个程序,程序A和程序B很有可能用到一个相同的线性地址Add_0xEF23E,因为操作系统为每个程序建立了一套页表映射关系,那么程序A经过自己的页表映射后Add_0xEF23E被映射到物理内存的0xEEA123处
程序B经过自己的页表映射后Add_0xEF23E被映射到物理内存的0xF45E4处,那么程序A和程序B虽然执行相同线性地址空间中的内容却可以互不影响的运行
=======
 
     +--------------------------+
     |                          |
     |                          |
     |                          |
     |  中文爱爱啊a a           |
     | +                        |
     +--------------------------+
1K = 2^10 = 1024
1M = 2^20 = 2^10 * 2^10 = 1024 * 1024
1G = 2^30 = 2^10 * 2^10 * 2^10 = 2014 * 1024 * 1024
4G = 2^32 = 2^10 * 2^10 * 2^10 * 2^2 = 1024 * 1024 * 1024 * 4 
 一根地址线寻址一个地址,地址有8bit称为一个字节 1B
32根地址线有2^32种可能,每一种可能寻址一个字节即1B,那么32根地址线共可以寻址2^32 * 1B = 4GB
	  
	  
32位程序下的线性地址到物理地址的翻译过程:
 存在一个线性地址如:
 
+---------------------------+---------------------------+-----------------------------------+
|			高10位			|		中间10位				|			低12位					|
+---------------------------+---------------------------+-----------------------------------+
	 
		 +----------+
		 |			|	
		 +----------+				+-----------+				
		 |			|				|			|	
		 +----------+				+-----------+
		 |			|				|			|
		 +----------+				+-----------+
	 	 |			|				|			|
	 	 +----------+				+-----------+
	 	
	 	
									 	 +----------+
										 |			|	
										 +----------+
										 |			|	
										 +----------+
										 |			|	
										 +----------+
	 	
	 	
	 	
	 	
>>>>>>> branch 'master' of git@github.com:littleicecube/MyFramework.git
	 	
xx+------------+
xx|xxxx xxxx xxxx|
xx+阿斯顿发---- +	 	
xx+------------+
xx|xxxxxxxxxxxx|
xx+阿斯顿发----+	 	

	 	
	
 * 
 */

	@Test
	public void move() {
		//
		long addr = 0x0fffe333;
		long tmp = (addr>>12)<<2;
		System.out.println(tmp&0xffc);
		
		long oth = (addr>>10)&0xffc;
		System.out.println(oth);
		System.out.println(Integer.parseInt("ffc", 16));
		//msg:;sr:4092;len:12:111111111100
		MovPrint.pInt(Integer.parseInt("ffc", 16));
	}
	
/*	
 * ((unsigned long*)
			(((address>>10)&0xffc) + (oxfffff000 & *((unsigned long *) ((address>>20) & oxffc)))))
			

(
	(unsigned long*)(
		(
			(address>>10) & 0xffc
		) + (
				oxfffff000 & *(		(unsigned long *) ((address>>20) & oxffc)	)
			)
	)

)
			
			
			*
			*/

}
