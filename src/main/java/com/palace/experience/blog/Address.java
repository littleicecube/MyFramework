package com.palace.experience.blog;

public class Address {
/**
 * 
假设程序A段基地址为0000100,段长度为6
假设程序B段基地址为0000100,段长度为6
操作系统的空间是独立的不被其他应用程序共享的,程序A和程序B的加载情况如下
在段式内存管理模式下线性地址空间就是物理地址空间,那么程序B就会覆盖程序A,在开启段页式内存管理模式后线性
地址就不在是物理地址还需要在转换一次才能得到真正的物理地址

			   |-----线程A地址空间---|
|-操作系统的地址空间-|-----线程B地址空间---|
0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 19   0XFFFFFFFF 
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--------+--+
|  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  | ...... |  |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--------+--+
	
逻辑地址--->线性地址
在实模式下也就是段式内存管理模式下线性地址就是物理地址

逻辑地址--->线性地址--->逻辑地址
在保护模式下也就是段页式内存管理模式下线性地址需要进一步转换才能得到物理地址
	
段页式内存管理模式就是将地址分段后在分页

	
	
	
	 
 */
}
