package com.palace.experience.blog;

public class Program {
/**
 * 
 * 1)在业务代码的编写中，要注意网络异常的处理，正常情况下，程序之间通过网络进行数据交换，业务代码根据数往下运行
 * 		当发生网络异常时，业务代码不能进行下去应该记录网络异常状态，下次程序再次运行时，处理当前数据时能够知道上次的流程没有运行下去是
 *		 因为网络异常，此时如果网络正常，应该进行下去。
 *		例如：调用远程服务获取用户信息，可能不存在对应的用户信息，集训处理，也可能是因为网络异常无法获取用户信息，那么在处理时，发现是网络
 *			异常应该抛出异常，终止本次调用。或者是记录状态，次状态被被赋予的意义是网络异常下次在处理。而不能因为网络异常导致的无法获取
 *			到用户信息作为用户不存在的判断依据，在对网路接口封装时尤其要注意区分开来
 */
}
