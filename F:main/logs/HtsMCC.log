2020-05-11 17:36:46 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-11 17:36:46 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-11 17:36:47 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-11 17:36:47 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-11 17:36:47 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 37947 (auto-detected)
2020-05-11 17:36:47 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-11 17:36:47 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-11 17:36:47 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-11 17:36:47 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-11 17:36:47 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-11 17:36:47 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xa129c02365c3ef21
2020-05-12 10:40:48 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-12 10:40:48 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-12 10:40:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-12 10:40:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-12 10:40:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 42871 (auto-detected)
2020-05-12 10:40:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-12 10:40:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-12 10:40:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-12 10:40:49 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-12 10:40:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-12 10:40:49 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x3ade99e41188e283
2020-05-12 10:41:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-12 10:41:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-12 10:41:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-12 10:45:57 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-12 10:45:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-12 10:45:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-12 10:45:57 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-12 10:46:02 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 42906 (auto-detected)
2020-05-12 10:46:02 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-12 10:46:02 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-12 10:46:02 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-12 10:46:02 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-12 10:46:02 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-12 10:46:02 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x4417226173b175e4
2020-05-12 10:46:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-12 10:46:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-12 10:46:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-13 16:32:37 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-13 16:32:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-13 16:32:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-13 16:32:37 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-13 16:32:38 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-13 16:32:38 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-13 16:32:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 53060 (auto-detected)
2020-05-13 16:32:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-13 16:32:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-13 16:32:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-13 16:32:38 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-13 16:32:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-13 16:32:38 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x522d34cd67a32b62
2020-05-13 16:32:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-13 16:32:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-13 16:32:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 16:32:38 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x56073348] REGISTERED
2020-05-13 16:32:38 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x56073348] BIND: 0.0.0.0/0.0.0.0:8007
2020-05-13 16:32:38 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x56073348, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-13 16:41:53 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-13 16:41:53 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-13 16:41:53 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-13 16:41:53 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 53129 (auto-detected)
2020-05-13 16:41:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-13 16:41:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-13 16:41:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-13 16:41:53 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-13 16:41:53 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-13 16:41:53 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x0c629a2dd09e3a95
2020-05-13 16:41:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-13 16:41:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-13 16:41:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-13 16:41:54 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-13 16:41:54 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-13 16:41:54 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 16:55:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x0b5b01a3] REGISTERED
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-13 17:03:33 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-13 17:03:33 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-13 17:03:34 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-13 17:03:34 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-13 17:03:34 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 53298 (auto-detected)
2020-05-13 17:03:34 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-13 17:03:34 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-13 17:03:34 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-13 17:03:34 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-13 17:03:34 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-13 17:03:34 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x648c51fdcd4fe82d
2020-05-13 17:03:34 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-13 17:03:34 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-13 17:03:34 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 17:20:31 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf30059c1] REGISTERED
2020-05-13 17:39:08 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf30059c1] BIND: 0.0.0.0/0.0.0.0:8007
2020-05-13 17:39:16 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf30059c1, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-13 17:46:40 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-13 17:46:40 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-13 17:46:40 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-13 17:46:40 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 53614 (auto-detected)
2020-05-13 17:46:40 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-13 17:46:40 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-13 17:46:40 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-13 17:46:40 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-13 17:46:40 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-13 17:46:40 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xffa72fdabf91e0c6
2020-05-13 17:46:40 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-13 17:46:40 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-13 17:46:40 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 17:46:49 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-13 17:46:49 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d43097a
2020-05-13 17:46:49 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-13 17:46:49 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-05-13 17:46:49 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf30059c1, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0x319afcb8, L:/127.0.0.1:8007 - R:/127.0.0.1:65529]
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4184bf73
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-13 17:47:14 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-13 17:49:32 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-13 17:49:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-13 17:49:33 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-13 17:49:33 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-13 17:49:33 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 53637 (auto-detected)
2020-05-13 17:49:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-13 17:49:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-13 17:49:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-13 17:49:33 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-13 17:49:33 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-13 17:49:33 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x44582256f7e122cf
2020-05-13 17:49:33 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-13 17:49:33 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-13 17:49:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 17:49:44 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-13 17:49:44 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d43097a
2020-05-13 17:49:44 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-13 17:49:44 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-05-13 17:49:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf30059c1, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0xd98faba5, L:/127.0.0.1:8007 - R:/127.0.0.1:50326]
2020-05-13 17:56:04 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-13 17:56:04 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-13 17:56:04 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-13 17:56:04 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-13 17:56:14 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-13 17:56:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-13 17:56:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-13 17:56:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 53694 (auto-detected)
2020-05-13 17:56:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-13 17:56:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-13 17:56:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-13 17:56:14 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-13 17:56:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-13 17:56:14 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x549e27cb3b5f3846
2020-05-13 17:56:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-13 17:56:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-13 17:56:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-13 17:56:37 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-13 17:56:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-13 17:56:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-13 17:56:37 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-13 17:56:38 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-13 17:56:38 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-13 17:56:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 53697 (auto-detected)
2020-05-13 17:56:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-13 17:56:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-13 17:56:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-13 17:56:38 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-13 17:56:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-13 17:56:38 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xd12aa132ef14da6b
2020-05-13 17:56:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-13 17:56:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-13 17:56:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-13 17:56:38 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-13 17:56:38 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@67d7c3cd
2020-05-13 17:56:38 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-13 17:56:38 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-05-13 17:56:38 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf30059c1, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0x616c209e, L:/127.0.0.1:8007 - R:/127.0.0.1:53041]
2020-05-13 18:11:03 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-13 18:11:03 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-13 18:11:03 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-13 18:11:03 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 09:38:50 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 09:38:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 09:38:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 09:38:50 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 09:38:51 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 60604 (auto-detected)
2020-05-14 09:38:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 09:38:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 09:38:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 09:38:51 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 09:38:51 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 09:38:51 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x02273f59bf9c8732
2020-05-14 09:38:51 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 09:38:51 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-14 09:38:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-14 09:38:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x66e9230a] REGISTERED
2020-05-14 09:38:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x66e9230a] BIND: 0.0.0.0/0.0.0.0:8007
2020-05-14 09:38:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x66e9230a, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-05-14 09:39:05 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 09:39:05 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 09:39:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 09:39:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 09:39:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 60605 (auto-detected)
2020-05-14 09:39:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 09:39:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 09:39:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 09:39:06 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 09:39:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 09:39:06 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x89673042bdad1516
2020-05-14 09:39:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 09:39:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-14 09:39:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-14 09:39:06 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-14 09:39:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@70961a1f
2020-05-14 09:39:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-14 09:39:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-05-14 10:25:11 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-14 10:25:11 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-14 10:25:11 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-14 10:25:11 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 10:26:24 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 10:26:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 10:26:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 10:26:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 61011 (auto-detected)
2020-05-14 10:26:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 10:26:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 10:26:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 10:26:24 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 10:26:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 10:26:24 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x6adb4fdfa661ecd8
2020-05-14 10:26:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 10:26:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 10:26:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 10:26:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 10:39:57 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 10:39:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 10:39:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 10:39:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 61106 (auto-detected)
2020-05-14 10:39:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 10:39:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 10:39:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 10:39:57 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 10:39:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 10:39:57 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x75d655fd1dfd7f0f
2020-05-14 10:39:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 10:39:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-14 10:40:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-14 10:40:07 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dd5418] REGISTERED
2020-05-14 10:40:07 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dd5418] BIND: 0.0.0.0/0.0.0.0:8007
2020-05-14 10:40:07 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dd5418, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 10:40:23 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 10:40:23 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 10:40:23 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 10:40:23 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 61113 (auto-detected)
2020-05-14 10:40:23 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 10:40:23 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 10:40:23 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 10:40:23 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 10:40:23 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 10:40:23 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xd3ac3ae4262e711d
2020-05-14 10:40:23 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 10:40:23 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-14 10:40:26 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-14 10:40:26 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b8af42d] REGISTERED
2020-05-14 10:40:26 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b8af42d] BIND: 0.0.0.0/0.0.0.0:8007
2020-05-14 10:40:26 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b8af42d] CLOSE
2020-05-14 10:40:26 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b8af42d] UNREGISTERED
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 10:40:37 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 10:40:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 10:40:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 10:40:37 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 61115 (auto-detected)
2020-05-14 10:40:37 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 10:40:37 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 10:40:37 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 10:40:37 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 10:40:37 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 10:40:37 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x6fecab541c009064
2020-05-14 10:40:37 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 10:40:37 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-14 10:40:37 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@67d7c3cd
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-05-14 10:40:37 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dd5418, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0x750b369f, L:/127.0.0.1:8007 - R:/127.0.0.1:53728]
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5ab403fc
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-14 10:40:37 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 10:45:58 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 10:45:58 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 10:45:58 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 10:45:58 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 10:45:59 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 10:45:59 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 10:45:59 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 61152 (auto-detected)
2020-05-14 10:45:59 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 10:45:59 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 10:45:59 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 10:45:59 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 10:45:59 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 10:45:59 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x203d85d78854122e
2020-05-14 10:45:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 10:45:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-14 10:45:59 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-14 10:45:59 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8c29b1df] REGISTERED
2020-05-14 10:45:59 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8c29b1df] BIND: 0.0.0.0/0.0.0.0:8007
2020-05-14 10:45:59 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8c29b1df, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 10:46:14 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 10:46:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 10:46:15 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 10:46:15 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 10:46:15 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 61153 (auto-detected)
2020-05-14 10:46:15 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 10:46:15 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 10:46:15 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 10:46:15 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 10:46:15 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 10:46:15 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x635bc860dd7e3ad8
2020-05-14 10:46:15 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 10:46:15 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-05-14 10:46:15 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4627f411
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-05-14 10:46:15 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8c29b1df, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0xc2b1f226, L:/127.0.0.1:8007 - R:/127.0.0.1:54609]
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@75e29909
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-14 10:46:15 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 10:46:52 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 10:46:52 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-05-14 10:46:52 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-05-14 10:46:52 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 61161 (auto-detected)
2020-05-14 10:46:52 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-05-14 10:46:52 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-05-14 10:46:52 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-05-14 10:46:52 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-05-14 10:46:52 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-05-14 10:46:52 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x1984dee08853d5d1
2020-05-14 10:46:52 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-14 10:46:52 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 10:46:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-14 11:10:57 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-14 11:10:57 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-14 11:10:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-14 11:10:58 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-21 19:32:29 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-21 19:32:30 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-21 19:32:30 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-21 19:32:30 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-21 19:32:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-21 19:32:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-21 19:32:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-21 19:33:03 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-21 19:33:03 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-21 19:33:03 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-21 19:33:03 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-21 19:33:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-21 19:33:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-21 19:33:55 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-21 19:33:55 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-21 19:33:55 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-21 19:33:55 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-21 19:33:55 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-21 19:33:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-21 19:33:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-21 19:33:55 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-21 19:33:55 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x88b0e19f8e361470
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-21 19:34:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-21 19:34:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-21 19:37:58 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-21 19:37:58 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-21 19:37:58 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-21 19:37:58 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-21 19:41:38 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-21 19:41:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-21 19:41:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-21 19:41:38 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@44821a96
2020-05-24 11:11:11 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-24 16:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-24 16:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-24 16:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-24 16:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-24 16:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-24 16:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-24 16:46:50 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-24 16:46:50 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-24 16:46:50 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-24 16:46:50 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-24 16:46:50 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-24 16:46:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-24 16:46:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-24 16:46:50 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-24 18:44:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-24 18:45:00 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-24 18:45:00 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-24 18:45:00 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-24 18:45:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-24 18:45:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-24 18:45:00 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-24 18:45:00 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-24 18:45:00 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-24 18:45:00 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-24 18:45:00 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-24 18:45:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-24 18:45:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-24 18:45:00 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-24 18:46:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-24 18:46:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-24 19:00:05 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-24 19:00:05 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-24 19:00:05 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-24 19:00:05 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-24 19:18:46 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-24 19:18:47 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-24 19:18:47 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-24 19:18:47 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1ba9117e
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-24 19:21:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-24 19:21:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-24 19:23:25 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-24 19:23:25 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-24 19:23:25 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-24 19:23:25 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-24 19:23:26 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-24 19:23:26 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-24 19:23:26 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-24 19:23:26 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 07:31:32 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 07:31:32 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 07:31:32 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 07:31:32 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 07:31:32 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 07:31:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 07:31:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 07:31:32 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 07:31:32 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x20676be37dbc825a
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 07:31:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 07:31:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 07:41:56 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 07:41:56 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 07:41:56 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 07:41:56 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 07:44:05 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 07:44:05 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 07:44:05 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 07:44:05 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 11:53:13 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 11:53:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 11:53:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 11:53:18 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 11:53:18 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 11:53:18 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 11:53:18 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 11:53:18 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 11:53:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 11:53:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 11:53:18 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 13:56:46 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 13:56:47 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 13:56:47 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 13:56:47 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 13:56:47 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 13:56:47 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 13:56:47 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 13:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 13:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 13:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 13:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 13:57:59 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 13:57:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 13:57:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 13:57:59 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 17:53:27 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 17:53:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 17:53:41 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 17:53:41 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 17:53:41 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 17:53:41 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 17:53:41 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 17:53:41 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 17:53:41 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 17:53:41 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 17:54:15 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 17:54:15 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 17:54:47 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 17:54:47 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 17:54:47 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 17:54:47 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 17:54:47 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 17:54:47 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 17:54:47 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 17:54:47 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 18:31:24 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 18:39:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 18:39:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 18:39:13 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 18:39:13 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 18:39:13 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 18:39:13 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 18:39:55 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 18:39:56 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 18:39:56 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 18:39:56 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6b8ca3c8
2020-05-25 19:09:08 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x3bf4271513821795
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 19:23:59 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 19:23:59 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 19:23:59 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 19:23:59 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 19:23:59 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 19:23:59 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 19:23:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 19:23:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 19:23:59 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-25 19:43:40 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-25 19:43:40 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-25 19:43:40 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-25 19:43:40 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-25 19:43:40 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-25 19:43:40 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-25 19:43:40 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-25 19:43:40 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-25 19:43:40 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 10:05:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 10:05:17 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 10:05:17 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 10:05:17 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 10:05:17 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 10:05:17 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 10:05:17 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 10:05:17 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 10:05:17 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 10:33:03 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x8c7835b9061ea99e
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 11:25:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 11:25:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 11:25:55 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 11:25:55 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 11:25:55 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 11:25:55 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 11:25:56 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 11:25:56 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 11:25:56 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 11:25:56 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 14:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 14:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 14:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 14:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 14:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 14:13:21 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 14:13:21 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 14:13:21 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 14:13:21 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 14:16:45 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x727435ed79cbc584
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 14:17:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 14:17:03 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 14:17:03 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 14:17:03 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 14:17:03 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 14:17:03 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 14:17:03 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 14:17:03 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 14:17:03 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 14:17:03 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 14:17:03 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 14:17:03 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 14:17:03 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 14:17:03 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 14:18:44 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x92b03fd005d84cca
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 15:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 15:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 15:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 15:13:21 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 15:13:21 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 15:13:21 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 15:13:21 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 15:13:21 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 15:13:21 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x830b26a53f525bf8
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 16:06:18 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 16:06:18 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 16:06:18 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 16:06:18 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 16:06:18 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 16:06:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 16:06:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 16:06:18 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 16:06:18 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x3ac3ae390e14337e
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 16:11:59 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 16:11:59 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 16:11:59 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 16:11:59 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 16:11:59 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 16:11:59 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 16:11:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 16:11:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 16:11:59 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 16:12:56 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xa534a3d37b45e2e9
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 16:27:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 16:27:41 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 16:27:41 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 16:27:41 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 16:27:41 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 16:27:41 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 16:27:41 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 16:27:41 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 16:27:41 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 16:36:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 16:36:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 16:36:30 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 16:36:30 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 16:36:30 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 16:36:30 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 16:36:31 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 16:36:31 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 16:36:31 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 16:36:31 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 18:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 18:53:06 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 18:53:06 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 18:53:06 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 18:53:06 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 18:53:06 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 18:53:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 18:53:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 18:53:06 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-26 18:58:10 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-26 18:58:10 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-26 18:58:10 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-26 18:58:10 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-26 18:58:10 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-26 18:58:10 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-26 18:58:10 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-26 18:58:10 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-26 18:58:10 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 10:54:20 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 10:54:20 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 10:54:20 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 10:54:20 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 10:54:20 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 10:54:20 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 10:54:20 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 10:54:20 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 10:54:20 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 10:57:53 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xfd8320d03b90259d
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 11:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 11:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 11:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 11:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 11:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 11:01:57 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 11:01:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 11:01:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 11:01:57 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 11:16:07 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 11:16:07 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 11:16:07 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 11:16:07 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 11:16:07 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 11:16:07 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 11:16:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 11:16:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 11:16:07 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 11:30:24 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 11:31:01 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 11:34:29 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 11:34:35 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 11:34:35 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 11:34:35 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 11:34:35 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 11:34:35 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 11:34:35 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 11:34:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 11:34:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 11:34:35 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 13:35:00 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 13:35:01 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 13:35:01 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 13:35:01 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 13:35:01 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 13:35:01 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 13:35:01 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 13:35:01 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 13:35:01 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 13:35:01 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 13:35:01 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 13:35:01 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 13:35:01 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 13:35:01 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 13:38:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 13:38:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 13:38:06 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 13:38:07 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 13:38:07 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 13:38:07 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 13:38:07 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 13:38:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 13:38:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 13:38:07 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 13:49:01 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 13:49:21 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 13:49:36 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 13:50:30 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 13:50:41 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 13:50:55 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 14:00:55 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 14:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 14:01:01 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 14:01:01 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 14:01:01 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 14:01:01 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 14:01:01 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 14:01:01 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 14:01:01 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 14:01:01 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 14:11:05 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xc37ea19fb3c8caf1
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-27 21:49:49 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-27 21:49:49 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-27 21:49:49 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-27 21:49:49 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-27 21:49:49 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-27 21:49:49 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-27 21:49:49 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-27 21:49:49 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-27 21:49:49 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x1ea102bbfebf3d59
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-28 09:56:05 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-28 09:56:05 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-28 09:56:05 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-28 09:56:05 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-28 09:56:05 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-28 09:56:05 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-28 09:56:05 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-28 09:56:05 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-28 09:56:05 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xdb6232a177fdebfd
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-28 09:56:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-28 09:56:53 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-28 09:56:53 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-28 09:56:53 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-28 09:56:53 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-28 09:56:53 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-28 09:56:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-28 09:56:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-28 09:56:53 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-28 09:59:52 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xf18b0df833b9cca5
2020-05-28 10:05:01 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-28 10:05:02 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-28 10:05:02 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-28 10:05:02 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-28 10:05:02 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-28 10:05:02 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-28 10:05:02 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-28 10:05:02 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-28 10:05:02 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-28 10:05:02 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-28 10:05:09 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x40912fdf24dc8ab0
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-05-28 10:13:54 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-28 10:13:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-05-28 10:13:55 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-05-28 10:13:55 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-28 10:13:55 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-05-28 10:13:55 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-05-28 10:13:55 DEBUG [main] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-05-28 10:13:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-05-28 10:13:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-05-28 10:13:55 DEBUG [main] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3a6bb9bf
2020-05-28 10:14:02 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xff95bee3e32c833d
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-02 11:39:02 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-02 11:39:02 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-02 11:39:02 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-02 11:39:02 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 95941 (auto-detected)
2020-06-02 11:39:02 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-02 11:39:02 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-02 11:39:02 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-02 11:39:02 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-02 11:39:02 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-06-02 11:39:02 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x4f87faba9c7a9cd0
2020-06-02 11:39:02 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-02 11:39:02 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-02 11:39:02 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-02 11:40:20 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45e8bf4f] REGISTERED
2020-06-02 11:40:53 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45e8bf4f] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-02 11:40:53 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45e8bf4f, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-02 11:41:06 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-02 11:41:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-02 11:41:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-02 11:41:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 95956 (auto-detected)
2020-06-02 11:41:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-02 11:41:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-02 11:41:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-02 11:41:06 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-02 11:41:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-06-02 11:41:06 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x7e78b005ca65f49a
2020-06-02 11:41:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-02 11:41:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-02 11:41:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-02 11:41:06 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-02 11:41:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5f601f01
2020-06-02 11:41:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-02 11:41:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-02 11:41:07 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45e8bf4f, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0xa9d04937, L:/127.0.0.1:8007 - R:/127.0.0.1:61184]
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@60f629ac
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-02 11:41:07 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 10:06:06 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 10:06:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 10:06:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 10:06:06 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 10:06:07 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 648 (auto-detected)
2020-06-03 10:06:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 10:06:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 10:06:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 10:06:07 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 10:06:07 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 10:06:07 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x9f90782a1e9af6f6
2020-06-03 10:06:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 10:06:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 10:06:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 10:06:07 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf514126b] REGISTERED
2020-06-03 10:06:07 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf514126b] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 10:06:07 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf514126b, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 10:06:24 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 10:06:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 10:06:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 10:06:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 656 (auto-detected)
2020-06-03 10:06:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 10:06:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 10:06:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 10:06:24 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 10:06:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 10:06:24 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x44347685ec9aea3b
2020-06-03 10:06:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 10:06:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 10:06:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4b1d3b55
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 10:06:24 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf514126b, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0x434c6e95, L:/127.0.0.1:8007 - R:/127.0.0.1:59508]
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2dcf504c
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 10:06:24 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 10:06:25 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 10:06:25 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 10:06:25 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 10:06:25 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 11:03:11 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 11:03:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 11:03:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 11:03:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 1213 (auto-detected)
2020-06-03 11:03:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 11:03:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 11:03:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 11:03:11 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 11:03:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 11:03:11 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x2cb482aa1a676d1a
2020-06-03 11:03:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 11:03:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 11:03:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 11:03:11 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 11:03:11 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4b1d3b55
2020-06-03 11:03:11 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 11:03:11 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 11:03:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf514126b, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0x37320604, L:/127.0.0.1:8007 - R:/127.0.0.1:62839]
2020-06-03 11:03:24 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 11:03:24 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 11:03:24 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 11:03:24 DEBUG [nioEventLoopGroup-2-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 11:04:05 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 11:04:05 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 11:04:05 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 11:04:05 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 1223 (auto-detected)
2020-06-03 11:04:05 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 11:04:05 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 11:04:05 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 11:04:05 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 11:04:05 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 11:04:05 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x4c273b4476e1ebcb
2020-06-03 11:04:05 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 11:04:05 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 11:04:05 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 11:04:05 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x0e28d0be] REGISTERED
2020-06-03 11:04:05 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x0e28d0be] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 11:04:05 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x0e28d0be, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 11:06:35 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 11:06:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 11:06:36 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 11:06:36 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 11:06:36 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 1237 (auto-detected)
2020-06-03 11:06:36 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 11:06:36 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 11:06:36 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 11:06:36 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 11:06:36 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 11:06:36 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x19c3f418383dfb45
2020-06-03 11:06:36 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 11:06:36 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 11:06:36 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 11:06:36 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe60f93d0] REGISTERED
2020-06-03 11:06:36 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe60f93d0] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 11:06:36 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe60f93d0, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 11:06:46 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 11:06:46 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 11:06:46 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 11:06:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 1238 (auto-detected)
2020-06-03 11:06:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 11:06:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 11:06:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 11:06:46 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 11:06:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 11:06:46 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xc251197354d38595
2020-06-03 11:06:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 11:06:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 11:06:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 11:06:46 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 11:06:46 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5f601f01
2020-06-03 11:06:46 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 11:06:46 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 11:06:46 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 11:06:46 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 11:06:46 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 11:06:46 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 11:06:46 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe60f93d0, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0x2e12655c, L:/127.0.0.1:8007 - R:/127.0.0.1:65124]
2020-06-03 11:06:46 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 11:06:46 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@790f6f09
2020-06-03 11:06:46 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 11:28:33 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 11:28:33 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 11:28:33 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 11:28:33 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 1416 (auto-detected)
2020-06-03 11:28:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 11:28:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 11:28:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 11:28:33 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 11:28:33 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 11:28:33 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xc3b410d8decf4e29
2020-06-03 11:28:33 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 11:28:33 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 11:31:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 11:31:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 11:31:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 11:31:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 11:33:29 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x596d3a6c] REGISTERED
2020-06-03 11:33:29 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x596d3a6c] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 11:33:29 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x596d3a6c, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 11:33:49 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 11:33:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 11:33:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 11:33:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 11:33:50 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 11:33:50 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 11:33:50 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 11:33:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 1453 (auto-detected)
2020-06-03 11:33:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 11:33:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 11:33:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 11:33:50 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 11:33:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 11:33:50 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xaf1dff2bd9f4c439
2020-06-03 11:33:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 11:33:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 11:33:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 11:33:50 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 11:33:50 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d241468
2020-06-03 11:33:50 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 11:33:50 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 11:33:50 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 11:33:50 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 11:33:50 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 11:33:50 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 11:33:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x596d3a6c, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0x43c9ba78, L:/127.0.0.1:8007 - R:/127.0.0.1:49503]
2020-06-03 11:33:50 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 11:33:50 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6a30dee
2020-06-03 11:33:50 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 12:02:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 12:02:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 12:02:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 12:02:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 12:19:32 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 12:19:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 12:19:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 12:19:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 1793 (auto-detected)
2020-06-03 12:19:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 12:19:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 12:19:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 12:19:32 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 12:19:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 12:19:32 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x7df79209f0cee365
2020-06-03 12:19:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 12:19:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 12:19:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 12:19:32 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 12:19:32 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@d241468
2020-06-03 12:19:32 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 12:19:32 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 12:19:32 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x596d3a6c, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0xc43db8a8, L:/127.0.0.1:8007 - R:/127.0.0.1:62011]
2020-06-03 12:19:32 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 12:19:32 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 12:19:32 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 12:19:32 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 14:51:13 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 14:51:13 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 14:51:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 14:51:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 14:51:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 2846 (auto-detected)
2020-06-03 14:51:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 14:51:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 14:51:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 14:51:14 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 14:51:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 14:51:14 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xf03f222885558c18
2020-06-03 14:51:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 14:51:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 14:51:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 14:51:14 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x844541f5] REGISTERED
2020-06-03 14:51:14 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x844541f5] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 14:51:14 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x844541f5, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 14:52:27 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 14:52:27 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 14:52:27 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 14:52:27 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 2855 (auto-detected)
2020-06-03 14:52:27 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 14:52:27 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 14:52:27 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 14:52:27 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 14:52:27 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 14:52:27 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xf13a7fc70e0a99cb
2020-06-03 14:52:27 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 14:52:27 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 14:52:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@170dc7f1
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 14:52:27 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 14:52:27 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 14:52:27 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 14:52:27 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 14:52:27 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x844541f5, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0xf6554d71, L:/127.0.0.1:8007 - R:/127.0.0.1:64782]
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3b9c9bfb
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 14:52:27 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 14:52:35 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 14:52:35 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 14:52:35 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 14:52:35 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 2856 (auto-detected)
2020-06-03 14:52:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 14:52:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 14:52:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 14:52:35 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 14:52:35 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 14:52:35 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x225de998d016929a
2020-06-03 14:52:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 14:52:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 14:52:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 14:52:35 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x46affe50] REGISTERED
2020-06-03 14:52:35 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x46affe50] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 14:52:35 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x46affe50, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 14:52:43 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 14:52:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 14:52:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 14:52:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 2858 (auto-detected)
2020-06-03 14:52:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 14:52:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 14:52:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 14:52:43 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 14:52:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 14:52:43 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x5411e01f855f21a3
2020-06-03 14:52:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 14:52:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 14:52:43 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@115c92c4
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 14:52:43 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 14:52:43 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 14:52:43 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 14:52:43 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 14:52:43 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x46affe50, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0xc83c3f2d, L:/127.0.0.1:8007 - R:/127.0.0.1:64894]
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@15a5bb4a
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 14:52:43 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 14:56:32 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 14:56:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 14:56:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 14:56:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 2888 (auto-detected)
2020-06-03 14:56:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 14:56:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 14:56:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 14:56:32 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 14:56:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 14:56:32 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xd8029e0d42c05ef5
2020-06-03 14:56:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 14:56:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 14:56:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 14:56:32 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xb887af72] REGISTERED
2020-06-03 14:56:32 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xb887af72] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 14:56:32 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xb887af72, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 14:56:43 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 14:56:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 14:56:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 14:56:43 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 14:56:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 2889 (auto-detected)
2020-06-03 14:56:44 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 14:56:44 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 14:56:44 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 14:56:44 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 14:56:44 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 14:56:44 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0x517bb20e38cdc2eb
2020-06-03 14:56:44 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 14:56:44 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 14:56:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 14:56:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xb4798c90] REGISTERED
2020-06-03 14:56:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xb4798c90] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 14:56:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xb4798c90, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 14:56:56 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(43) | -Dio.netty.eventLoopThreads: 24
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.explicitNoUnsafe0(1069) | -Dio.netty.noUnsafe: false
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(90) | java.nio.Buffer.address: available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(127) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(151) | sun.misc.Unsafe.copyMemory: available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(198) | direct buffer constructor: available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(239) | java.nio.Bits.unaligned: available, true
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(251) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.Cleaner0.<clinit>(67) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.javaVersion0(1028) | Java version: 8
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.hasUnsafe0(1104) | sun.misc.Unsafe: available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1181) | -Dio.netty.noJavassist: false
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.hasJavassist0(1190) | Javassist: available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1213) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1292) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(117) | -Dio.netty.noPreferDirect: false
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(153) | io.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 14:56:56 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(110) | -Dio.netty.noKeySetOptimization: false
2020-06-03 14:56:56 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(111) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(819) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.io.netty.buffer.ByteBufMatcher
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.CharSequenceMatcher
2020-06-03 14:56:56 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(80) | -Dio.netty.processId: 2896 (auto-detected)
2020-06-03 14:56:56 DEBUG [main] io.netty.util.NetUtil.<clinit>(137) | -Djava.net.preferIPv4Stack: false
2020-06-03 14:56:56 DEBUG [main] io.netty.util.NetUtil.<clinit>(138) | -Djava.net.preferIPv6Addresses: false
2020-06-03 14:56:56 DEBUG [main] io.netty.util.NetUtil.<clinit>(219) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 14:56:56 DEBUG [main] io.netty.util.NetUtil$1.run(270) | /proc/sys/net/core/somaxconn: 128 (non-existent)
2020-06-03 14:56:56 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(102) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 14:56:56 DEBUG [main] io.netty.util.internal.ThreadLocalRandom.newSeed(226) | -Dio.netty.initialSeedUniquifier: 0xc97f95cb3c383795
2020-06-03 14:56:56 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(116) | -Dio.netty.leakDetection.level: simple
2020-06-03 14:56:56 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(117) | -Dio.netty.leakDetection.maxRecords: 4
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(112) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(113) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(115) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(124) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(125) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(126) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(127) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(129) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(130) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(80) | -Dio.netty.allocator.type: pooled
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(89) | -Dio.netty.threadLocalDirectBufferSize: 65536
2020-06-03 14:56:56 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@67d7c3cd
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-2-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.net.InetSocketAddressMatcher
2020-06-03 14:56:56 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 14:56:56 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 14:56:56 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 14:56:56 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 14:56:56 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xb4798c90, L:/0:0:0:0:0:0:0:0:8007] RECEIVED: [id: 0xf7a7e1be, L:/127.0.0.1:8007 - R:/127.0.0.1:50173]
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(52) | -Dio.netty.buffer.bytebuf.checkAccessible: true
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(140) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@790f6f09
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-3-1] io.netty.util.internal.JavassistTypeParameterMatcherGenerator.generate(82) | Generated: io.netty.util.internal.__matchers__.java.lang.StringMatcher
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 32768
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 14:56:56 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:00:42 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:00:43 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:00:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:00:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:00:43 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:00:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 2938 (auto-detected)
2020-06-03 15:00:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:00:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:00:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:00:43 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:00:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:00:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:00:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:00:43 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:00:43 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3ccf696b] REGISTERED
2020-06-03 15:00:43 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3ccf696b] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 15:00:43 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3ccf696b, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:01:00 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:01:00 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:01:00 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:01:00 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:01:00 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 2945 (auto-detected)
2020-06-03 15:01:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:01:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:01:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:01:00 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:01:00 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:01:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:01:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:01:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@31c442b5
2020-06-03 15:01:00 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:01:00 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:01:00 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:01:00 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:01:00 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3ccf696b, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xaff4797e, L:/127.0.0.1:8007 - R:/127.0.0.1:51878]
2020-06-03 15:01:00 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3ccf696b, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@149736ae
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:01:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:03:20 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:03:20 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:03:20 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:03:20 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:03:20 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 2968 (auto-detected)
2020-06-03 15:03:20 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:03:20 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:03:20 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:03:20 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:03:20 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:03:20 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:03:20 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:03:20 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:03:20 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa47752ec] REGISTERED
2020-06-03 15:03:20 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa47752ec] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 15:03:20 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa47752ec, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:03:31 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:03:31 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:03:31 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:03:31 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:03:31 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 2970 (auto-detected)
2020-06-03 15:03:31 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:03:31 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:03:31 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:03:31 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:03:31 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:03:31 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:03:31 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:03:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7276f2e8
2020-06-03 15:03:31 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:03:31 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:03:31 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:03:31 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:03:31 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa47752ec, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x25d706f0, L:/127.0.0.1:8007 - R:/127.0.0.1:52882]
2020-06-03 15:03:31 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa47752ec, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@402fc992
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:03:31 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:15:55 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:15:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:15:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:15:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:15:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3060 (auto-detected)
2020-06-03 15:15:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:15:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:15:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:15:55 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:15:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:15:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:15:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:15:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:15:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75] REGISTERED
2020-06-03 15:15:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 15:15:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 15:16:05 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:16:05 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:16:05 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:16:05 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:16:06 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:16:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3061 (auto-detected)
2020-06-03 15:16:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:16:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:16:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:16:06 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:16:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:16:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:16:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:16:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@31c442b5
2020-06-03 15:16:06 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:16:06 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:16:06 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:16:06 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:16:06 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x90e7ade3, L:/127.0.0.1:8007 - R:/127.0.0.1:57920]
2020-06-03 15:16:06 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@697151fd
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:16:06 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:27:19 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:27:19 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:27:19 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:27:19 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:27:19 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3157 (auto-detected)
2020-06-03 15:27:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:27:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:27:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:27:19 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:27:19 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:27:19 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:27:19 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:27:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:27:19 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:27:19 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:27:19 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b93529c
2020-06-03 15:27:19 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xc93c428a, L:/127.0.0.1:8007 - R:/127.0.0.1:62426]
2020-06-03 15:27:19 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 15:27:19 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:27:19 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:27:19 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:27:19 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:27:55 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:27:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:27:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:27:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:27:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3162 (auto-detected)
2020-06-03 15:27:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:27:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:27:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:27:55 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:27:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:27:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:27:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:27:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:27:55 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:27:55 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:27:55 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@79cda81d
2020-06-03 15:27:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x0d574461, L:/127.0.0.1:8007 - R:/127.0.0.1:62663]
2020-06-03 15:27:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x7e29fc75, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 15:27:55 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:27:55 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:27:55 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:27:55 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:28:51 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:28:51 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:28:51 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:28:51 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:28:51 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3177 (auto-detected)
2020-06-03 15:28:52 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:28:52 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:28:52 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:28:52 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:28:52 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:28:52 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:28:52 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:28:52 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:28:52 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x78645ebc] REGISTERED
2020-06-03 15:28:52 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x78645ebc] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 15:28:52 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x78645ebc, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:28:59 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:28:59 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:28:59 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:28:59 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:28:59 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3178 (auto-detected)
2020-06-03 15:28:59 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:28:59 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:28:59 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:28:59 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:28:59 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:28:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:28:59 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:28:59 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:28:59 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:28:59 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:28:59 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@71b583f5
2020-06-03 15:28:59 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:28:59 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:28:59 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:28:59 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:28:59 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x78645ebc, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xd2d790ef, L:/127.0.0.1:8007 - R:/127.0.0.1:63107]
2020-06-03 15:28:59 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x78645ebc, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 15:29:00 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:29:00 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:29:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1b61971d
2020-06-03 15:29:47 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:29:47 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:29:47 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:29:47 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:30:31 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:30:31 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:30:31 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:30:31 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:30:31 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3193 (auto-detected)
2020-06-03 15:30:31 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:30:31 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:30:31 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:30:31 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:30:31 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:30:31 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:30:31 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:30:31 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:30:31 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3e376a3d] REGISTERED
2020-06-03 15:30:31 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3e376a3d] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 15:30:31 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3e376a3d, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 15:30:41 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 15:30:41 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 15:30:41 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 15:30:41 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 15:30:42 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3195 (auto-detected)
2020-06-03 15:30:42 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 15:30:42 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 15:30:42 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 15:30:42 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 15:30:42 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 15:30:42 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 15:30:42 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 15:30:42 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 15:30:42 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:30:42 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:30:42 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@e74e635
2020-06-03 15:30:42 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:30:42 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:30:42 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:30:42 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 15:30:42 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3e376a3d, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x97184334, L:/127.0.0.1:8007 - R:/127.0.0.1:63787]
2020-06-03 15:30:42 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3e376a3d, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 15:30:42 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 15:30:42 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 15:30:42 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@54d392ab
2020-06-03 15:59:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 15:59:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 15:59:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 15:59:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 16:24:44 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 16:24:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 16:24:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 16:24:44 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 16:24:44 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3745 (auto-detected)
2020-06-03 16:24:44 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 16:24:44 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 16:24:44 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 16:24:44 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 16:24:44 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 16:24:44 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 16:24:44 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 16:24:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 16:24:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4d4c4a89] REGISTERED
2020-06-03 16:24:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4d4c4a89] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 16:24:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4d4c4a89, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 16:35:43 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 16:35:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 16:35:43 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 16:35:43 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 16:35:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3823 (auto-detected)
2020-06-03 16:35:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 16:35:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 16:35:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 16:35:43 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 16:35:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 16:35:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 16:35:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 16:35:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@24a3455c
2020-06-03 16:35:44 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 16:35:44 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 16:35:44 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 16:35:44 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 16:35:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4d4c4a89, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x7dbff64e, L:/127.0.0.1:8007 - R:/127.0.0.1:57087]
2020-06-03 16:35:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4d4c4a89, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3148c9c4
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 16:35:44 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 16:39:45 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 16:39:45 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 16:39:45 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 16:39:45 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 16:39:45 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3850 (auto-detected)
2020-06-03 16:39:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 16:39:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 16:39:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 16:39:45 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 16:39:45 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 16:39:45 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 16:39:45 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 16:39:45 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 16:39:45 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 16:39:45 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 16:39:45 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@76982eb1
2020-06-03 16:39:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4d4c4a89, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x11ab451b, L:/127.0.0.1:8007 - R:/127.0.0.1:58672]
2020-06-03 16:39:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4d4c4a89, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 16:39:45 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 16:39:45 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 16:39:45 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 16:39:45 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 16:40:44 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 16:40:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 16:40:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 16:40:44 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 16:40:45 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 3857 (auto-detected)
2020-06-03 16:40:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 16:40:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 16:40:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 16:40:45 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 16:40:45 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 16:40:45 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 16:40:45 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 16:40:45 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 16:40:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd9f34a49] REGISTERED
2020-06-03 16:40:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd9f34a49] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 16:40:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd9f34a49, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 17:04:28 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 17:04:28 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 17:04:28 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 17:04:28 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 17:04:29 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4067 (auto-detected)
2020-06-03 17:04:29 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 17:04:29 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 17:04:29 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 17:04:29 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 17:04:29 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 17:04:29 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 17:04:29 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 17:04:29 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 17:04:29 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 17:04:29 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 17:04:29 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5ce44b94
2020-06-03 17:04:29 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 17:04:29 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 17:04:29 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 17:04:29 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 17:04:29 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd9f34a49, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xdbf229d9, L:/127.0.0.1:8007 - R:/127.0.0.1:52332]
2020-06-03 17:04:29 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd9f34a49, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 17:04:29 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 17:04:29 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 17:04:29 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4cba6d4d
2020-06-03 17:12:23 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 17:12:23 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 17:12:23 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 17:12:23 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 17:46:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 17:46:49 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 17:46:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 17:46:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 17:46:49 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 17:46:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 17:46:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4405 (auto-detected)
2020-06-03 17:46:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 17:46:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 17:46:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 17:46:50 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 17:46:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 17:46:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 17:46:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 17:46:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 17:46:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xccd8cbc7] REGISTERED
2020-06-03 17:46:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xccd8cbc7] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 17:46:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xccd8cbc7, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 17:46:55 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 17:46:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 17:46:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 17:46:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 17:46:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4406 (auto-detected)
2020-06-03 17:46:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 17:46:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 17:46:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 17:46:55 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 17:46:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 17:46:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 17:46:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 17:46:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 17:46:55 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 17:46:55 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 17:46:55 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@74aa86b7
2020-06-03 17:46:55 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 17:46:55 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 17:46:55 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 17:46:55 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 17:46:56 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xccd8cbc7, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xa8ea7b9e, L:/127.0.0.1:8007 - R:/127.0.0.1:53082]
2020-06-03 17:46:56 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xccd8cbc7, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 17:46:56 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 17:46:56 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 17:46:56 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4c3dfa98
2020-06-03 17:51:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 17:51:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 17:51:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 17:51:15 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 17:51:30 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 17:51:30 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 17:51:30 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 17:51:30 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 17:51:30 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4439 (auto-detected)
2020-06-03 17:51:30 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 17:51:30 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 17:51:30 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 17:51:30 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 17:51:30 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 17:51:30 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 17:51:30 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 17:51:30 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 17:51:30 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc1127b39] REGISTERED
2020-06-03 17:51:30 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc1127b39] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 17:51:30 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc1127b39, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 17:51:37 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 17:51:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 17:51:37 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 17:51:37 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 17:51:37 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4440 (auto-detected)
2020-06-03 17:51:37 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 17:51:37 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 17:51:37 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 17:51:37 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 17:51:37 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 17:51:37 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 17:51:37 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 17:51:37 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 17:51:37 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x29c19827] REGISTERED
2020-06-03 17:51:37 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x29c19827] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 17:51:37 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x29c19827] CLOSE
2020-06-03 17:51:37 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x29c19827] UNREGISTERED
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 17:51:46 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 17:51:46 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 17:51:46 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 17:51:46 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 17:51:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4441 (auto-detected)
2020-06-03 17:51:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 17:51:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 17:51:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 17:51:46 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 17:51:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 17:51:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 17:51:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 17:51:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 17:51:46 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x00b997e6] REGISTERED
2020-06-03 17:51:46 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x00b997e6] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 17:51:46 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x00b997e6, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 17:51:53 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 17:51:53 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 17:51:53 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 17:51:53 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 17:51:53 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4442 (auto-detected)
2020-06-03 17:51:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 17:51:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 17:51:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 17:51:53 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 17:51:53 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 17:51:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 17:51:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 17:51:53 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 17:51:53 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 17:51:53 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 17:51:53 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@8436c73
2020-06-03 17:51:53 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 17:51:53 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 17:51:53 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 17:51:53 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 17:51:54 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x00b997e6, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xa4842ed5, L:/127.0.0.1:8007 - R:/127.0.0.1:55061]
2020-06-03 17:51:54 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x00b997e6, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 17:51:54 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 17:51:54 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 17:51:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4722026e
2020-06-03 17:51:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 17:51:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 17:51:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 17:51:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 18:01:50 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 18:01:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 18:01:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 18:01:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 18:01:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4518 (auto-detected)
2020-06-03 18:01:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 18:01:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 18:01:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 18:01:50 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 18:01:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 18:01:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 18:01:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 18:01:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 18:01:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd83efe9a] REGISTERED
2020-06-03 18:01:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd83efe9a] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 18:01:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd83efe9a, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 18:01:57 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 18:01:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 18:01:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 18:01:57 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 18:01:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4519 (auto-detected)
2020-06-03 18:01:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 18:01:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 18:01:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 18:01:57 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 18:01:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 18:01:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 18:01:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 18:01:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 18:01:57 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 18:01:57 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 18:01:57 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@8436c73
2020-06-03 18:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 18:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 18:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 18:01:57 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 18:01:57 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd83efe9a, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x877b557d, L:/127.0.0.1:8007 - R:/127.0.0.1:59073]
2020-06-03 18:01:57 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xd83efe9a, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 18:01:57 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 18:01:57 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 18:01:57 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@430d88ea
2020-06-03 18:02:38 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 18:02:38 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 18:02:38 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 18:02:38 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 18:27:49 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 18:27:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 18:27:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 18:27:49 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 18:27:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 18:27:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 18:27:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4724 (auto-detected)
2020-06-03 18:27:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 18:27:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 18:27:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 18:27:50 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 18:27:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 18:27:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 18:27:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 18:27:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 18:27:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc6a91a95] REGISTERED
2020-06-03 18:27:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc6a91a95] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 18:27:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc6a91a95, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 18:34:11 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 18:34:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 18:34:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 18:34:11 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 18:34:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4772 (auto-detected)
2020-06-03 18:34:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 18:34:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 18:34:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 18:34:11 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 18:34:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 18:34:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 18:34:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 18:34:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 18:34:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dee80f] REGISTERED
2020-06-03 18:34:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dee80f] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 18:34:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dee80f] CLOSE
2020-06-03 18:34:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa7dee80f] UNREGISTERED
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 18:34:26 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 18:34:26 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 18:34:26 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 18:34:26 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 18:34:26 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4773 (auto-detected)
2020-06-03 18:34:26 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 18:34:26 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 18:34:26 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 18:34:26 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 18:34:27 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 18:34:27 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 18:34:27 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 18:34:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 18:34:27 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc50fd70b] REGISTERED
2020-06-03 18:34:27 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc50fd70b] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-03 18:34:27 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc50fd70b, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-03 18:34:57 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-03 18:34:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-03 18:34:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-03 18:34:57 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-03 18:34:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 4782 (auto-detected)
2020-06-03 18:34:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-03 18:34:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-03 18:34:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-03 18:34:57 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-03 18:34:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-03 18:34:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-03 18:34:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-03 18:34:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-03 18:34:57 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 18:34:57 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 18:34:57 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@76982eb1
2020-06-03 18:34:57 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 18:34:57 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 18:34:57 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 18:34:57 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-03 18:34:58 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc50fd70b, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x6fd54d7a, L:/127.0.0.1:8007 - R:/127.0.0.1:55918]
2020-06-03 18:34:58 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xc50fd70b, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-03 18:34:58 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-03 18:34:58 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-03 18:34:58 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3148c9c4
2020-06-03 18:35:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-03 18:35:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-03 18:35:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-03 18:35:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 18:47:27 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 18:47:27 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 18:47:27 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 18:47:27 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 18:47:27 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17678 (auto-detected)
2020-06-10 18:47:27 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 18:47:27 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 18:47:27 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 18:47:27 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 18:47:27 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 18:47:27 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 18:47:27 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 18:47:27 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 18:48:03 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xdfeb8754] REGISTERED
2020-06-10 18:48:21 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xdfeb8754] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-10 18:48:21 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xdfeb8754, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 18:48:32 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 18:48:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 18:48:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 18:48:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 18:48:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17686 (auto-detected)
2020-06-10 18:48:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 18:48:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 18:48:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 18:48:32 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 18:48:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 18:48:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 18:48:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 18:48:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 18:50:52 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 18:50:52 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 18:50:52 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 18:50:52 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 18:53:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 18:53:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 18:53:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17708 (auto-detected)
2020-06-10 18:53:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 18:53:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 18:53:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 18:53:32 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 18:53:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 18:53:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 18:53:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 18:53:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 18:54:08 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x62543638] REGISTERED
2020-06-10 18:54:08 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x62543638] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-10 18:54:08 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x62543638, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 18:54:24 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 18:54:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 18:54:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 18:54:24 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 18:54:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17731 (auto-detected)
2020-06-10 18:54:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 18:54:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 18:54:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 18:54:24 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 18:54:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 18:54:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 18:54:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 18:54:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 18:54:28 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6e847beb] REGISTERED
2020-06-10 18:54:28 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6e847beb] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-10 18:54:28 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6e847beb, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 18:54:32 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 18:54:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 18:54:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 18:54:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 18:54:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17732 (auto-detected)
2020-06-10 18:54:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 18:54:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 18:54:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 18:54:32 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 18:54:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 18:54:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 18:54:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 18:54:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 18:55:24 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 18:55:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 18:55:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 18:55:24 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 18:55:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17740 (auto-detected)
2020-06-10 18:55:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 18:55:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 18:55:24 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 18:55:24 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 18:55:24 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 18:55:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 18:55:24 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 18:55:24 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 19:00:47 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3b657316] REGISTERED
2020-06-10 19:00:47 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3b657316] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-10 19:00:47 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x3b657316, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 19:00:53 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 19:00:53 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 19:00:53 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 19:00:53 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 19:00:53 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17775 (auto-detected)
2020-06-10 19:00:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 19:00:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 19:00:53 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 19:00:53 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 19:00:53 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 19:00:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 19:00:53 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 19:00:53 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 19:02:38 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 19:02:38 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 19:02:38 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 19:02:38 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 19:02:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17790 (auto-detected)
2020-06-10 19:02:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 19:02:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 19:02:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 19:02:38 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 19:02:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 19:02:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 19:02:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 19:02:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 19:02:50 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 19:02:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 19:02:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 19:02:50 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 19:02:51 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 19:02:51 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 19:02:51 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17791 (auto-detected)
2020-06-10 19:02:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 19:02:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 19:02:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 19:02:51 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 19:02:51 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 19:02:51 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 19:02:51 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 19:02:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 19:03:07 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 19:03:07 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 19:03:07 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 19:03:07 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 19:03:07 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17798 (auto-detected)
2020-06-10 19:03:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 19:03:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 19:03:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 19:03:07 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 19:03:07 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 19:03:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 19:03:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 19:03:07 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 19:03:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x70e1a08a] REGISTERED
2020-06-10 19:03:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x70e1a08a] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-10 19:03:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x70e1a08a, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 19:04:00 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 19:04:00 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 19:04:00 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 19:04:00 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 19:04:00 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17804 (auto-detected)
2020-06-10 19:04:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 19:04:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 19:04:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 19:04:00 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 19:04:00 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 19:04:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 19:04:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 19:04:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 19:06:04 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 19:06:04 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 19:06:04 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 19:06:04 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 19:06:04 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17829 (auto-detected)
2020-06-10 19:06:04 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 19:06:04 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 19:06:04 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 19:06:04 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 19:06:04 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 19:06:04 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 19:06:04 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 19:06:04 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-10 19:09:40 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2c0ee39a] REGISTERED
2020-06-10 19:09:40 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2c0ee39a] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-10 19:09:40 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2c0ee39a, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-10 19:09:50 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-10 19:09:50 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-10 19:09:51 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-10 19:09:51 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-10 19:09:51 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-10 19:09:51 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 17908 (auto-detected)
2020-06-10 19:09:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-10 19:09:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-10 19:09:51 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-10 19:09:51 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-10 19:09:51 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-10 19:09:51 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-10 19:09:51 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-10 19:09:51 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:47:55 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:47:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:47:55 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:47:55 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:48:00 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28135 (auto-detected)
2020-06-22 11:48:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:48:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:48:00 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:48:00 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:48:00 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:48:00 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:48:00 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:48:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:48:00 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:48:00 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:48:00 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x08db1bf8] REGISTERED
2020-06-22 11:48:00 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x08db1bf8] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 11:48:00 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x08db1bf8, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:48:50 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:48:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:48:50 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:48:50 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:48:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28142 (auto-detected)
2020-06-22 11:48:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:48:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:48:55 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:48:55 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:48:55 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:48:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:48:55 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:48:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:48:55 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:48:55 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:48:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x47f62952] REGISTERED
2020-06-22 11:48:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x47f62952] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 11:48:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x47f62952, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:49:08 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:49:08 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:49:08 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:49:08 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:49:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28143 (auto-detected)
2020-06-22 11:49:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:49:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:49:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:49:14 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:49:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:49:14 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:49:14 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:49:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:49:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:49:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:49:14 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:49:14 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:49:14 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:49:14 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@16a5d3e8
2020-06-22 11:49:14 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-22 11:49:14 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x47f62952, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x4e39c59e, L:/127.0.0.1:8007 - R:/127.0.0.1:65261]
2020-06-22 11:49:14 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x47f62952, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:49:14 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@14376387
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:51:14 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:51:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:51:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:51:14 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:51:19 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28161 (auto-detected)
2020-06-22 11:51:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:51:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:51:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:51:19 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:51:19 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:51:19 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:51:19 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:51:19 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:51:19 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:51:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:51:19 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe649202e] REGISTERED
2020-06-22 11:51:19 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe649202e] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 11:51:19 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe649202e, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:51:23 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:51:23 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:51:23 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:51:23 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:51:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28163 (auto-detected)
2020-06-22 11:51:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:51:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:51:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:51:32 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:51:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:51:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:51:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:51:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:51:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:51:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:51:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:51:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:51:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:51:33 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:51:33 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:51:33 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:51:33 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:51:33 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:51:33 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:51:33 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@45063098
2020-06-22 11:51:33 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe649202e, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xf98d9c4b, L:/127.0.0.1:8007 - R:/127.0.0.1:49234]
2020-06-22 11:51:33 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xe649202e, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 11:51:58 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:51:58 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:51:58 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:51:58 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:51:58 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:51:58 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:51:58 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@27ed315f
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:52:46 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:52:46 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:52:46 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:52:46 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:53:06 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:53:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:53:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:53:06 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:53:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28178 (auto-detected)
2020-06-22 11:53:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:53:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:53:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:53:11 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:53:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:53:11 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:53:11 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:53:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:53:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:53:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:53:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b587bd8] REGISTERED
2020-06-22 11:53:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b587bd8] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 11:53:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b587bd8, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:53:17 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:53:17 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:53:17 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:53:17 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:53:22 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28180 (auto-detected)
2020-06-22 11:53:22 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:53:22 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:53:22 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:53:22 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:53:22 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:53:22 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:53:22 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:53:22 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:53:22 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:53:23 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:53:23 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:53:23 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:53:23 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:53:23 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:53:23 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:53:23 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:53:23 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@be987f8
2020-06-22 11:53:23 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b587bd8, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xa02e40ac, L:/127.0.0.1:8007 - R:/127.0.0.1:49522]
2020-06-22 11:53:23 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x8b587bd8, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 11:53:25 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:53:25 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:53:25 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:53:25 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:53:25 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-22 11:53:25 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:53:25 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:53:25 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@14376387
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:54:06 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:54:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:54:06 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:54:06 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:54:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28188 (auto-detected)
2020-06-22 11:54:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:54:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:54:11 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:54:11 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:54:11 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:54:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:54:11 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:54:11 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:54:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x73dd182d] REGISTERED
2020-06-22 11:54:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x73dd182d] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 11:54:11 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x73dd182d, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:54:11 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:54:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:54:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:54:11 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:54:16 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28189 (auto-detected)
2020-06-22 11:54:16 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:54:16 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:54:16 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:54:16 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:54:16 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:54:16 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:54:16 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:54:16 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:54:16 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:54:17 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:54:17 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:54:17 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:54:17 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:54:17 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:54:17 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:54:17 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:54:17 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@be987f8
2020-06-22 11:54:17 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x73dd182d, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x1ed639cd, L:/127.0.0.1:8007 - R:/127.0.0.1:49667]
2020-06-22 11:54:17 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x73dd182d, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 11:54:26 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:54:26 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:54:26 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:54:26 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:54:26 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:54:26 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:54:26 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@14376387
2020-06-22 11:54:28 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:55:42 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:55:42 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:55:42 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:55:42 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:55:48 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28203 (auto-detected)
2020-06-22 11:55:48 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:55:48 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:55:48 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:55:48 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:55:48 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:55:48 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:55:48 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:55:48 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:55:48 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:55:48 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:55:48 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xbdaf4a1c] REGISTERED
2020-06-22 11:55:48 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xbdaf4a1c] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 11:55:48 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xbdaf4a1c, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 11:55:52 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 11:55:52 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 11:55:52 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 11:55:52 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 11:55:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28204 (auto-detected)
2020-06-22 11:55:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 11:55:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 11:55:57 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 11:55:57 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 11:55:57 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 11:55:57 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 11:55:57 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 11:55:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 11:55:57 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 11:55:57 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 11:55:57 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:55:57 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:55:57 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:55:57 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:55:57 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:55:57 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:55:57 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@72823f7f
2020-06-22 11:55:57 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xbdaf4a1c, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x2f00e0c9, L:/127.0.0.1:8007 - R:/127.0.0.1:49924]
2020-06-22 11:55:57 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xbdaf4a1c, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 11:56:04 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 11:56:04 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 11:56:04 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 11:56:04 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 11:56:04 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-22 11:56:04 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 11:56:04 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 11:56:04 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@749972d7
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 13:00:28 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 13:00:28 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 13:00:28 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 13:00:28 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 13:00:33 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28678 (auto-detected)
2020-06-22 13:00:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 13:00:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 13:00:33 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 13:00:33 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 13:00:33 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 13:00:33 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 13:00:33 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 13:00:33 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 13:00:33 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 13:00:33 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 13:00:38 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 13:00:38 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 13:00:38 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 13:00:38 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 13:00:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28679 (auto-detected)
2020-06-22 13:00:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 13:00:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 13:00:43 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 13:00:43 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 13:00:43 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 13:00:43 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 13:00:43 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 13:00:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 13:00:43 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 13:00:44 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 13:00:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2b89daa0] REGISTERED
2020-06-22 13:00:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2b89daa0] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 13:00:44 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2b89daa0, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 13:01:01 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 13:01:01 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 13:01:01 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 13:01:01 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 13:01:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28680 (auto-detected)
2020-06-22 13:01:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 13:01:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 13:01:06 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 13:01:06 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 13:01:06 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 13:01:06 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 13:01:06 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 13:01:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 13:01:06 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 13:01:06 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 13:01:06 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 13:01:06 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 13:01:06 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 13:01:06 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 13:01:06 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 13:01:06 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 13:01:06 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@be987f8
2020-06-22 13:01:06 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-22 13:01:06 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2b89daa0, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xb4ccd0c3, L:/127.0.0.1:8007 - R:/127.0.0.1:59437]
2020-06-22 13:01:06 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2b89daa0, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 13:06:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 13:06:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 13:06:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 13:06:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 13:06:09 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 13:06:09 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 13:06:09 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@589e8cc6
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 13:06:14 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 13:06:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 13:06:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 13:06:14 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 13:06:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28720 (auto-detected)
2020-06-22 13:06:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 13:06:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 13:06:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 13:06:49 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 13:06:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 13:06:49 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 13:06:49 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 13:06:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 13:06:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 13:06:58 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 13:06:58 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 13:06:58 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 13:06:58 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 13:07:03 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28723 (auto-detected)
2020-06-22 13:07:03 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 13:07:03 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 13:07:03 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 13:07:03 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 13:07:03 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 13:07:03 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 13:07:03 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 13:07:03 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 13:07:03 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 13:07:03 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 13:07:03 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45bf204e] REGISTERED
2020-06-22 13:07:03 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45bf204e] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 13:07:03 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45bf204e, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 13:07:07 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 13:07:07 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 13:07:08 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 13:07:08 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 13:07:08 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 13:07:13 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 28724 (auto-detected)
2020-06-22 13:07:13 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 13:07:13 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 13:07:13 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 13:07:13 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 13:07:13 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 13:07:13 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 13:07:13 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 13:07:13 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 13:07:13 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 13:07:13 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 13:07:13 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 13:07:13 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 13:07:13 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 13:07:13 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 13:07:13 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 13:07:13 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 13:07:13 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@16a5d3e8
2020-06-22 13:07:13 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-22 13:07:13 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45bf204e, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x62b3fa2d, L:/127.0.0.1:8007 - R:/127.0.0.1:60351]
2020-06-22 13:07:13 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x45bf204e, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 13:10:55 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 13:10:55 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 13:10:55 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 13:10:55 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 13:10:55 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 13:10:55 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 13:10:55 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@589e8cc6
2020-06-22 16:52:44 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 16:52:44 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 16:52:45 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 16:52:45 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 16:52:45 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 16:52:49 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 16:52:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 16:52:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 16:52:49 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 16:52:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 76597 (auto-detected)
2020-06-22 16:52:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 16:52:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 16:52:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 16:52:50 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 16:52:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 16:52:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 16:52:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 16:52:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 16:52:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 16:52:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 16:52:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4ad1e43d] REGISTERED
2020-06-22 16:52:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4ad1e43d] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 16:52:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4ad1e43d, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 16:52:54 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 76619 (auto-detected)
2020-06-22 16:52:54 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 16:52:54 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 16:52:54 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 16:52:54 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 16:52:54 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 16:52:54 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 16:52:54 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 16:52:54 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 16:52:54 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 16:52:54 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 16:52:54 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 16:52:54 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 16:52:54 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 16:52:54 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7dc2818a
2020-06-22 16:52:54 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-22 16:52:54 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4ad1e43d, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xb7cdf649, L:/127.0.0.1:8007 - R:/127.0.0.1:51363]
2020-06-22 16:52:54 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x4ad1e43d, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-22 16:52:54 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@45136a37
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 16:58:41 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 16:58:41 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 16:58:41 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 16:58:41 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 16:58:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 77961 (auto-detected)
2020-06-22 16:58:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 16:58:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 16:58:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 16:58:46 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 16:58:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 16:58:46 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 16:58:46 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 16:58:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 16:58:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 16:58:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 16:59:57 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 16:59:57 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 16:59:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 16:59:57 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 17:05:11 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 17:05:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 17:05:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 17:05:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 17:05:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 17:05:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 17:05:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 17:05:12 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 17:06:04 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 78255 (auto-detected)
2020-06-22 17:06:04 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 17:06:04 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 17:06:04 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 17:06:04 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 17:06:04 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 17:06:04 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 17:06:04 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 17:06:04 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 17:06:04 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 17:06:04 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 17:18:36 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6deed93f] REGISTERED
2020-06-22 17:19:26 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6deed93f] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 17:19:32 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6deed93f, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 17:23:09 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 17:23:09 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 17:23:09 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 17:23:09 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 17:38:49 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 17:38:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 17:38:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 17:38:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 17:38:50 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 17:38:56 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 17:41:56 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 17:41:56 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 17:41:56 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 17:41:56 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 17:42:17 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 17:42:18 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 17:44:22 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 87795 (auto-detected)
2020-06-22 17:44:22 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 17:44:22 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 17:44:22 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 17:44:22 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 17:44:22 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 17:44:22 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 17:44:22 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 17:44:22 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 17:44:22 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 17:44:22 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 17:59:18 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x1cd4e804] REGISTERED
2020-06-22 18:02:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x1cd4e804] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 18:02:53 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x1cd4e804, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 21:05:24 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 21:05:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 21:05:24 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 21:05:24 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 21:05:29 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 33916 (auto-detected)
2020-06-22 21:05:29 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 21:05:29 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 21:05:29 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 21:05:29 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 21:05:29 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 21:05:29 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 21:05:29 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 21:05:29 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 21:05:29 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 21:05:29 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-22 21:11:13 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-22 21:11:13 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-22 21:11:13 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-22 21:11:13 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-22 21:11:18 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 35237 (auto-detected)
2020-06-22 21:11:18 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-22 21:11:18 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-22 21:11:18 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-22 21:11:18 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-22 21:11:18 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-22 21:11:18 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-22 21:11:18 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-22 21:11:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-22 21:11:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-22 21:11:18 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-22 21:14:21 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2f26d064] REGISTERED
2020-06-22 21:14:21 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2f26d064] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-22 21:14:21 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x2f26d064, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 10:43:13 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 10:43:13 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 10:43:13 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 10:43:13 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 10:43:18 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 16957 (auto-detected)
2020-06-23 10:43:18 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-23 10:43:18 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-23 10:43:18 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-23 10:43:18 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-23 10:43:18 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-23 10:43:18 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-23 10:43:18 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-23 10:43:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-23 10:43:18 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-23 10:43:18 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-23 10:43:48 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 10:43:48 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 10:43:48 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 10:43:48 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 10:44:13 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 10:44:14 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 10:45:00 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 10:45:00 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 10:45:00 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 10:45:00 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 10:45:03 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 10:58:32 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 10:58:32 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 10:58:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 10:58:32 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 11:00:08 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 11:00:09 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 11:01:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 20493 (auto-detected)
2020-06-23 11:01:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-23 11:01:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-23 11:01:32 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-23 11:01:32 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-23 11:01:32 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-23 11:01:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-23 11:01:32 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-23 11:01:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-23 11:01:32 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-23 11:01:32 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-23 11:06:23 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x374b7336] REGISTERED
2020-06-23 11:06:23 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x374b7336] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-23 11:06:23 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x374b7336, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 11:06:44 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 11:06:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 11:06:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 11:06:44 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 11:07:45 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 22363 (auto-detected)
2020-06-23 11:07:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-23 11:07:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-23 11:07:45 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-23 11:07:45 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-23 11:07:45 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-23 11:07:45 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-23 11:07:45 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-23 11:07:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-23 11:07:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 11:08:48 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 11:08:48 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 11:08:48 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 11:08:48 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 11:10:36 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 22819 (auto-detected)
2020-06-23 11:10:36 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-23 11:10:36 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-23 11:10:36 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-23 11:10:36 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-23 11:10:36 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-23 11:10:36 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-23 11:10:36 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-23 11:10:36 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-23 11:10:36 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-23 11:10:36 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-23 11:15:27 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x374b7336, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x222986e2, L:/127.0.0.1:8007 - R:/127.0.0.1:50762]
2020-06-23 11:15:55 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x374b7336, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-23 11:19:46 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-23 11:19:46 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-23 11:19:46 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-23 11:19:46 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@10d18715
2020-06-23 11:19:46 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-23 11:19:46 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6a99beb4
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 13:55:40 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 13:55:40 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 13:55:40 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 13:55:40 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 13:55:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 38075 (auto-detected)
2020-06-23 13:55:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-23 13:55:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-23 13:55:46 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-23 13:55:46 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-23 13:55:46 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-23 13:55:46 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-23 13:55:46 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-23 13:55:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-23 13:55:46 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-23 13:55:46 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-23 13:55:57 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x09dac673] REGISTERED
2020-06-23 13:55:57 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x09dac673] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-23 13:55:57 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x09dac673, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-23 13:56:11 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-23 13:56:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-23 13:56:11 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-23 13:56:11 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-23 13:56:16 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 38083 (auto-detected)
2020-06-23 13:56:16 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-23 13:56:16 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-23 13:56:16 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-23 13:56:16 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-23 13:56:16 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-23 13:56:16 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-23 13:56:16 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-23 13:56:16 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-23 13:56:16 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-23 13:56:16 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-23 13:56:17 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-23 13:56:17 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-23 13:56:17 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-23 13:56:17 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@16a5d3e8
2020-06-23 13:56:17 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-23 13:56:17 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x09dac673, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xca23583e, L:/127.0.0.1:8007 - R:/127.0.0.1:65442]
2020-06-23 13:56:17 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x09dac673, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-23 13:56:17 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6d0feab4
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:19:58 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:19:58 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:19:58 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:19:58 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:20:03 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 65786 (auto-detected)
2020-06-26 17:20:03 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:20:03 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:20:03 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:20:03 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:20:03 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:20:03 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:20:03 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:20:03 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:20:03 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:20:03 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:20:03 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa5be9805] REGISTERED
2020-06-26 17:20:03 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa5be9805] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-26 17:20:03 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa5be9805, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-26 17:20:13 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:20:13 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:20:13 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:20:13 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:20:14 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:20:19 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 65850 (auto-detected)
2020-06-26 17:20:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:20:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:20:19 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:20:19 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:20:19 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:20:19 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:20:19 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:20:19 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:20:19 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:20:19 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:20:19 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-26 17:20:19 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-26 17:20:19 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-26 17:20:19 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6b05cfbd
2020-06-26 17:20:19 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-26 17:20:19 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa5be9805, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x6f548d3b, L:/127.0.0.1:8007 - R:/127.0.0.1:63713]
2020-06-26 17:20:19 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xa5be9805, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-26 17:20:19 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@285d0c45
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:21:30 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:21:30 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:21:30 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:21:30 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:21:35 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 66131 (auto-detected)
2020-06-26 17:21:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:21:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:21:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:21:35 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:21:35 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:21:35 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:21:35 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:21:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:21:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:21:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:21:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf399447d] REGISTERED
2020-06-26 17:21:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf399447d] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-26 17:21:45 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf399447d, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:22:29 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:22:29 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:22:29 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:22:29 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:22:30 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:22:35 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 66370 (auto-detected)
2020-06-26 17:22:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:22:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:22:35 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:22:35 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:22:35 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:22:35 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:22:35 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:22:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:22:35 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:22:35 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:22:35 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-26 17:22:35 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-26 17:22:35 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-26 17:22:35 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-26 17:22:35 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-26 17:22:35 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-26 17:22:35 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7dc2818a
2020-06-26 17:22:35 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-26 17:25:00 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xf399447d, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x97ccf41a, L:/127.0.0.1:8007 - R:/127.0.0.1:64335]
2020-06-26 17:25:40 WARN [nioEventLoopGroup-2-1] io.netty.channel.DefaultChannelPipeline.onUnhandledInboundException(1188) | An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: Connection reset by peer
	at sun.nio.ch.FileDispatcherImpl.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:39)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:347)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:648)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:583)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:25:44 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:25:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:25:44 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:25:44 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:25:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 67105 (auto-detected)
2020-06-26 17:25:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:25:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:25:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:25:49 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:25:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:25:49 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:25:49 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:25:49 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:25:49 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:25:49 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:25:49 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x5c44e89e] REGISTERED
2020-06-26 17:25:49 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x5c44e89e] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-26 17:25:49 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x5c44e89e, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:25:56 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:25:56 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:25:56 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:25:56 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:26:01 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 67156 (auto-detected)
2020-06-26 17:26:01 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:26:01 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:26:01 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:26:01 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:26:01 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:26:01 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:26:01 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:26:01 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:26:01 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:26:01 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:26:01 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-06-26 17:26:01 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-06-26 17:26:01 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-06-26 17:26:01 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-06-26 17:26:01 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-06-26 17:26:01 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-06-26 17:26:01 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7dc2818a
2020-06-26 17:26:01 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-26 17:38:11 WARN [nioEventLoopGroup-2-1] io.netty.channel.DefaultChannelPipeline.onUnhandledInboundException(1188) | An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.
java.io.IOException: Connection reset by peer
	at sun.nio.ch.FileDispatcherImpl.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:39)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:347)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:648)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:583)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:38:35 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:38:35 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:38:35 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:38:35 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:38:40 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 70068 (auto-detected)
2020-06-26 17:38:40 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:38:40 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:38:40 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:38:40 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:38:40 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:38:40 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:38:40 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:38:40 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:38:40 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:38:40 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:39:33 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0xde5151be] REGISTERED
2020-06-26 17:41:17 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:41:17 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:41:18 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:41:18 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:41:18 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:41:23 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 70680 (auto-detected)
2020-06-26 17:41:23 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:41:23 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:41:23 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:41:23 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:41:23 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:41:23 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:41:23 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:41:23 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:41:23 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:41:23 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:41:58 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6f3e0855] REGISTERED
2020-06-26 17:41:58 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6f3e0855] BIND: 0.0.0.0/0.0.0.0:8007
2020-06-26 17:41:58 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x6f3e0855, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-06-26 17:42:02 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-06-26 17:42:02 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-06-26 17:42:02 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-06-26 17:42:02 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-06-26 17:42:07 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 70856 (auto-detected)
2020-06-26 17:42:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-06-26 17:42:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-06-26 17:42:07 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-06-26 17:42:07 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-06-26 17:42:07 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-06-26 17:42:07 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-06-26 17:42:07 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-06-26 17:42:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-06-26 17:42:07 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-06-26 17:42:08 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-06-26 17:47:33 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x68cd8eaa] REGISTERED
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-07-03 16:57:38 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-07-03 16:57:38 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-07-03 16:57:38 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-07-03 16:57:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 38784 (auto-detected)
2020-07-03 16:57:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-07-03 16:57:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-07-03 16:57:38 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-07-03 16:57:38 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-07-03 16:57:38 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-07-03 16:57:38 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-07-03 16:57:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-07-03 16:57:38 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-07-03 16:57:38 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-07-03 16:57:38 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f] REGISTERED
2020-07-03 16:57:38 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f] BIND: 0.0.0.0/0.0.0.0:8007
2020-07-03 16:57:38 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] ACTIVE
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-07-03 16:57:49 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-07-03 16:57:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-07-03 16:57:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-07-03 16:57:49 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-07-03 16:57:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 38785 (auto-detected)
2020-07-03 16:57:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-07-03 16:57:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-07-03 16:57:50 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-07-03 16:57:50 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-07-03 16:57:50 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-07-03 16:57:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-07-03 16:57:50 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-07-03 16:57:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-07-03 16:57:50 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-07-03 16:57:50 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-07-03 16:57:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x8286f920, L:/127.0.0.1:8007 - R:/127.0.0.1:53590]
2020-07-03 16:57:50 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-07-03 16:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-07-03 16:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-07-03 16:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-07-03 16:57:59 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@32816504
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-3-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-07-03 16:58:00 DEBUG [nioEventLoopGroup-3-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@18068428
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-07-03 16:58:09 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-07-03 16:58:09 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-07-03 16:58:09 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-07-03 16:58:09 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 38792 (auto-detected)
2020-07-03 16:58:09 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-07-03 16:58:09 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-07-03 16:58:09 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-07-03 16:58:09 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-07-03 16:58:09 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-07-03 16:58:09 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-07-03 16:58:09 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-07-03 16:58:09 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-07-03 16:58:09 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-07-03 16:58:09 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x5b5f0a37, L:/127.0.0.1:8007 - R:/127.0.0.1:53646]
2020-07-03 16:58:09 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-07-03 16:58:40 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-07-03 16:58:40 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-07-03 16:58:40 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-07-03 16:58:40 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-07-03 16:58:41 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-07-03 16:58:41 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-07-03 16:58:41 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6edcb468
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-07-03 16:58:49 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-07-03 16:58:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-07-03 16:58:49 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-07-03 16:58:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 38793 (auto-detected)
2020-07-03 16:58:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-07-03 16:58:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-07-03 16:58:49 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-07-03 16:58:49 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-07-03 16:58:49 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-07-03 16:58:49 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-07-03 16:58:49 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-07-03 16:58:49 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-07-03 16:58:49 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-07-03 16:58:49 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0x026b8bc0, L:/127.0.0.1:8007 - R:/127.0.0.1:53749]
2020-07-03 16:58:49 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-07-03 16:59:47 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-07-03 16:59:47 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-07-03 16:59:47 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-07-03 16:59:47 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-07-03 17:02:30 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-07-03 17:02:30 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-07-03 17:02:30 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6edcb468
2020-07-03 17:10:51 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(47) | Using Log4J as the default logging framework
2020-07-03 17:11:14 DEBUG [main] io.netty.channel.MultithreadEventLoopGroup.<clinit>(44) | -Dio.netty.eventLoopThreads: 24
2020-07-03 17:11:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(104) | -Dio.netty.noKeySetOptimization: false
2020-07-03 17:11:14 DEBUG [main] io.netty.channel.nio.NioEventLoop.<clinit>(105) | -Dio.netty.selectorAutoRebuildThreshold: 512
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent.isOsx0(970) | Platform: MacOS
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(395) | -Dio.netty.noUnsafe: false
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.javaVersion0(871) | Java version: 8
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(120) | sun.misc.Unsafe.theUnsafe: available
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(144) | sun.misc.Unsafe.copyMemory: available
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(182) | java.nio.Buffer.address: available
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(243) | direct buffer constructor: available
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(313) | java.nio.Bits.unaligned: available, true
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(378) | jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent0.<clinit>(385) | java.nio.DirectByteBuffer.<init>(long, int): available
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(996) | sun.misc.Unsafe: available
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent.tmpdir0(1090) | -Dio.netty.tmpdir: /var/folders/mf/lggfsy911ml7n85wk8267xsc0000gn/T (java.io.tmpdir)
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent.bitMode0(1169) | -Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(158) | -Dio.netty.maxDirectMemory: 3817865216 bytes
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(164) | -Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.CleanerJava6.<clinit>(92) | java.nio.ByteBuffer.cleaner(): available
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent.<clinit>(184) | -Dio.netty.noPreferDirect: false
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(864) | org.jctools-core.MpscChunkedArrayQueue: available
2020-07-03 17:11:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(79) | -Dio.netty.processId: 38888 (auto-detected)
2020-07-03 17:11:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(139) | -Djava.net.preferIPv4Stack: false
2020-07-03 17:11:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(140) | -Djava.net.preferIPv6Addresses: false
2020-07-03 17:11:14 DEBUG [main] io.netty.util.NetUtil.<clinit>(224) | Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)
2020-07-03 17:11:14 DEBUG [main] io.netty.util.NetUtil$1.run(289) | Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128
2020-07-03 17:11:14 DEBUG [main] io.netty.channel.DefaultChannelId.<clinit>(101) | -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(54) | -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-07-03 17:11:14 DEBUG [main] io.netty.util.internal.InternalThreadLocalMap.<clinit>(57) | -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-07-03 17:11:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(121) | -Dio.netty.leakDetection.level: simple
2020-07-03 17:11:14 DEBUG [main] io.netty.util.ResourceLeakDetector.<clinit>(122) | -Dio.netty.leakDetection.targetRecords: 4
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(120) | -Dio.netty.allocator.numHeapArenas: 24
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(121) | -Dio.netty.allocator.numDirectArenas: 24
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(123) | -Dio.netty.allocator.pageSize: 8192
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(128) | -Dio.netty.allocator.maxOrder: 11
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(132) | -Dio.netty.allocator.chunkSize: 16777216
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(133) | -Dio.netty.allocator.tinyCacheSize: 512
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(134) | -Dio.netty.allocator.smallCacheSize: 256
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(135) | -Dio.netty.allocator.normalCacheSize: 64
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(136) | -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(137) | -Dio.netty.allocator.cacheTrimInterval: 8192
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.PooledByteBufAllocator.<clinit>(138) | -Dio.netty.allocator.useCacheForAllThreads: true
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(83) | -Dio.netty.allocator.type: pooled
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(92) | -Dio.netty.threadLocalDirectBufferSize: 0
2020-07-03 17:11:14 DEBUG [main] io.netty.buffer.ByteBufUtil.<clinit>(95) | -Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-07-03 17:11:14 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ: [id: 0xf8d25709, L:/127.0.0.1:8007 - R:/127.0.0.1:55640]
2020-07-03 17:11:14 INFO [nioEventLoopGroup-2-1] io.netty.util.internal.logging.AbstractInternalLogger.log(150) | [id: 0x39dc9a2f, L:/0:0:0:0:0:0:0:0:8007] READ COMPLETE
2020-07-03 17:11:17 DEBUG [main] io.netty.util.Recycler.<clinit>(96) | -Dio.netty.recycler.maxCapacityPerThread: 4096
2020-07-03 17:11:17 DEBUG [main] io.netty.util.Recycler.<clinit>(97) | -Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-07-03 17:11:17 DEBUG [main] io.netty.util.Recycler.<clinit>(98) | -Dio.netty.recycler.linkCapacity: 16
2020-07-03 17:11:17 DEBUG [main] io.netty.util.Recycler.<clinit>(99) | -Dio.netty.recycler.ratio: 8
2020-07-03 17:12:31 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(61) | -Dio.netty.buffer.checkAccessible: true
2020-07-03 17:12:31 DEBUG [nioEventLoopGroup-2-1] io.netty.buffer.AbstractByteBuf.<clinit>(62) | -Dio.netty.buffer.checkBounds: true
2020-07-03 17:12:31 DEBUG [nioEventLoopGroup-2-1] io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(202) | Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3865918f
2020-07-03 17:13:58 WARN [nioEventLoopGroup-2-1] io.netty.util.ReferenceCountUtil.safeRelease(115) | Failed to release a message: PooledUnsafeDirectByteBuf(freed)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:124)
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:107)
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88)
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113)
	at io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:292)
	at io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:639)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.closeOutboundBufferForShutdown(AbstractChannel.java:681)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:674)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:948)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.access$1500(AbstractChannelHandlerContext.java:38)
	at io.netty.channel.AbstractChannelHandlerContext$16.run(AbstractChannelHandlerContext.java:756)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 11:46:28 INFO [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(581) | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b3d7190: startup date [Wed Jul 08 11:46:28 CST 2020]; root of context hierarchy
2020-07-08 11:46:28 DEBUG [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(615) | Bean factory for org.springframework.context.annotation.AnnotationConfigApplicationContext@b3d7190: org.springframework.beans.factory.support.DefaultListableBeanFactory@2f9f7dcf: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,trasactionProxyTest]; root of factory hierarchy
2020-07-08 11:46:28 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-07-08 11:46:28 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-07-08 11:46:28 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2020-07-08 11:46:28 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findAllClassPathResources(317) | Resolved classpath location [com/palace/seeds/spring/transaction/proxy/] to resources [URL [file:/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/]]
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(711) | Looking for matching resources in directory tree [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy]
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(773) | Searching directory [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy] for files matching pattern [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/**/*.class]
2020-07-08 11:46:28 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(483) | Resolved location pattern [classpath*:com/palace/seeds/spring/transaction/proxy/**/*.class] to resources [file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/TrasactionProxyTest.class], file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserPersist.class], file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserService.class]]
2020-07-08 11:46:28 DEBUG [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(286) | Identified candidate component class: file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserPersist.class]
2020-07-08 11:46:28 DEBUG [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(286) | Identified candidate component class: file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserService.class]
2020-07-08 11:46:28 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method com.palace.seeds.spring.transaction.proxy.UserPersist.ds()
2020-07-08 11:46:28 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method com.palace.seeds.spring.transaction.proxy.UserPersist.tem()
2020-07-08 11:46:28 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method com.palace.seeds.spring.transaction.proxy.UserPersist.transactionManager()
2020-07-08 11:46:34 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.registerBeanDefinitionForImportedConfigurationClass(164) | Registered bean definition for imported class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:34 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionAdvisor()
2020-07-08 11:46:34 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionAttributeSource()
2020-07-08 11:46:34 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionInterceptor()
2020-07-08 11:46:34 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionalEventListenerFactory()
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 11:46:47 INFO [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(581) | Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b3d7190: startup date [Wed Jul 08 11:46:47 CST 2020]; root of context hierarchy
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(615) | Bean factory for org.springframework.context.annotation.AnnotationConfigApplicationContext@b3d7190: org.springframework.beans.factory.support.DefaultListableBeanFactory@2f9f7dcf: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,trasactionProxyTest]; root of factory hierarchy
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findAllClassPathResources(317) | Resolved classpath location [com/palace/seeds/spring/transaction/proxy/] to resources [URL [file:/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/]]
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(711) | Looking for matching resources in directory tree [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy]
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(773) | Searching directory [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy] for files matching pattern [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/**/*.class]
2020-07-08 11:46:47 DEBUG [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(483) | Resolved location pattern [classpath*:com/palace/seeds/spring/transaction/proxy/**/*.class] to resources [file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/TrasactionProxyTest.class], file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserPersist.class], file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserService.class]]
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(286) | Identified candidate component class: file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserPersist.class]
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(286) | Identified candidate component class: file [/Users/wangzj05/git/MyFramework/target/classes/com/palace/seeds/spring/transaction/proxy/UserService.class]
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method com.palace.seeds.spring.transaction.proxy.UserPersist.ds()
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method com.palace.seeds.spring.transaction.proxy.UserPersist.tem()
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method com.palace.seeds.spring.transaction.proxy.UserPersist.transactionManager()
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.registerBeanDefinitionForImportedConfigurationClass(164) | Registered bean definition for imported class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionAdvisor()
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionAttributeSource()
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionInterceptor()
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(256) | Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionalEventListenerFactory()
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassEnhancer.enhance(109) | Successfully enhanced com.palace.seeds.spring.transaction.proxy.TrasactionProxyTest; enhanced class name is: com.palace.seeds.spring.transaction.proxy.TrasactionProxyTest$$EnhancerBySpringCGLIB$$fa13deba
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(412) | Replacing bean definition 'trasactionProxyTest' existing class 'com.palace.seeds.spring.transaction.proxy.TrasactionProxyTest' with enhanced class 'com.palace.seeds.spring.transaction.proxy.TrasactionProxyTest$$EnhancerBySpringCGLIB$$fa13deba'
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassEnhancer.enhance(109) | Successfully enhanced org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; enhanced class name is: org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$489c4247
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(412) | Replacing bean definition 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' existing class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' with enhanced class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$489c4247'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(728) | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1acaf3d]
2020-07-08 11:46:47 DEBUG [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(752) | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@34f6515b]
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(720) | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2f9f7dcf: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,trasactionProxyTest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,userPersist,userService,ds,tem,transactionManager,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,org.springframework.aop.config.internalAutoProxyCreator]; root of factory hierarchy
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(72) | Registered injected element on class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$489c4247]: AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(86) | Processing injected element of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
2020-07-08 11:46:47 DEBUG [main] org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(87) | Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'transactionAttributeSource'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'transactionAttributeSource'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'transactionAttributeSource' to allow for resolving potential circular references
2020-07-08 11:46:47 DEBUG [main] org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(87) | Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'transactionAttributeSource'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'transactionInterceptor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'transactionInterceptor'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:47 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'transactionAttributeSource'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'transactionInterceptor' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1625) | Invoking afterPropertiesSet() on bean with name 'transactionInterceptor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'transactionInterceptor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'trasactionProxyTest'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'trasactionProxyTest'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'trasactionProxyTest' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'trasactionProxyTest'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'userPersist'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'userPersist'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(72) | Registered injected element on class [com.palace.seeds.spring.transaction.proxy.UserPersist]: AutowiredFieldElement for public javax.sql.DataSource com.palace.seeds.spring.transaction.proxy.UserPersist.ds
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'userPersist' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(86) | Processing injected element of bean 'userPersist': AutowiredFieldElement for public javax.sql.DataSource com.palace.seeds.spring.transaction.proxy.UserPersist.ds
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'ds'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'ds'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(247) | Returning eagerly cached instance of singleton bean 'userPersist' that is not fully initialized yet - a consequence of a circular reference
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'ds' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'ds'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(516) | Autowiring by type from bean name 'userPersist' to bean named 'ds'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'userPersist'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'userService'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'userService'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(72) | Registered injected element on class [com.palace.seeds.spring.transaction.proxy.UserService]: AutowiredFieldElement for public org.springframework.jdbc.core.JdbcTemplate com.palace.seeds.spring.transaction.proxy.UserService.tem
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'userService' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(86) | Processing injected element of bean 'userService': AutowiredFieldElement for public org.springframework.jdbc.core.JdbcTemplate com.palace.seeds.spring.transaction.proxy.UserService.tem
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'tem'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'tem'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'userPersist'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'tem' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1625) | Invoking afterPropertiesSet() on bean with name 'tem'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'tem'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(516) | Autowiring by type from bean name 'userService' to bean named 'tem'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(528) | Creating implicit proxy for bean 'userService' with 0 common interceptors and 1 specific interceptors
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.transaction.proxy.UserService@5dd1c9f2]
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.transaction.proxy.UserService.update()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.transaction.proxy.UserService.query()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 11:46:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'userService'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'ds'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'tem'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'ds'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'transactionManager'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'transactionManager'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'userPersist'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1625) | Invoking afterPropertiesSet() on bean with name 'transactionManager'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'transactionManager'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'transactionAttributeSource'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'transactionInterceptor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2020-07-08 11:46:48 DEBUG [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(779) | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5ef6ae06]
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'lifecycleProcessor'
2020-07-08 11:46:48 DEBUG [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(91) | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'userService'
2020-07-08 11:46:48 DEBUG [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251) | Returning cached instance of singleton bean 'transactionManager'
2020-07-08 11:46:48 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.transaction.proxy.UserService.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 11:48:18 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 11:48:18 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 11:48:18 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.TransactionAopTest$UserService@72a7c7e0]
2020-07-08 13:57:48 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.TransactionAopTest$UserService.update()
2020-07-08 13:57:48 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.TransactionAopTest$UserService.query()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 13:57:48 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 13:57:48 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 14:01:04 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.aop.TransactionAopTest$UserService.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 14:02:16 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 14:03:29 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 14:07:39 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [null]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-07-08 14:07:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 14:08:02 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@1e4a7dd4]
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 14:59:52 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@1e4a7dd4]
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:01:09 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@1e4a7dd4]
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:01:47 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:04:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@7b3300e5]
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@2eafffde]
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:31:17 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:33:15 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.TransactionAopTest$UserService@72a7c7e0]
2020-07-08 15:33:16 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.TransactionAopTest$UserService.update()
2020-07-08 15:33:16 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.TransactionAopTest$UserService.query()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:33:16 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:33:16 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 15:33:21 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.aop.TransactionAopTest$UserService.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 15:33:22 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(759) | Initiating transaction commit
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(269) | Committing JDBC transaction on Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java]
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(327) | Releasing JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] after transaction
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(327) | Returning JDBC Connection to DataSource
2020-07-08 15:33:22 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 15:33:22 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.aop.TransactionAopTest$UserService.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.core.JdbcTemplate.update(522) | Executing SQL update [update ds.tbDict set nCode = nCode+1]
2020-07-08 15:33:22 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 15:33:22 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 15:33:22 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 15:33:22 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317) | Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73) | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.xml.BeansDtdResolver.resolveEntity(74) | Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans-2.0.dtd
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(92) | Loading bean definitions
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'DB2'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'DB2'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'DB2' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'DB2'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Derby'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Derby'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Derby' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Derby'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'H2'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'H2'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'H2' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'H2'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'HSQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'HSQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'HSQL' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'HSQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Informix'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Informix'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Informix' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Informix'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'MS-SQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'MS-SQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'MS-SQL' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'MS-SQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'MySQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'MySQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'MySQL' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'MySQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Oracle'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Oracle'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Oracle' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Oracle'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'PostgreSQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'PostgreSQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'PostgreSQL' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'PostgreSQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Sybase'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Sybase'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Sybase' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Sybase'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Hana'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Hana'
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Hana' to allow for resolving potential circular references
2020-07-08 15:33:22 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Hana'
2020-07-08 15:33:22 INFO [main] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(126) | SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(199) | Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp.BasicDataSource@37313c65]
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(217) | Database product name cached for DataSource [org.apache.commons.dbcp.BasicDataSource@37313c65]: name is 'MySQL'
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(175) | SQL error codes for 'MySQL' found
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.logTranslation(397) | Translating SQLException with SQL state '42S02', error code '1146', message [Table 'ds.tbdict' doesn't exist]; SQL was [update ds.tbDict set nCode = nCode+1] for task [StatementCallback]
2020-07-08 15:33:22 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(851) | Initiating transaction rollback
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(284) | Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java]
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(327) | Releasing JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] after transaction
2020-07-08 15:33:22 DEBUG [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(327) | Returning JDBC Connection to DataSource
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@6e171cd7]
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:49:24 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@6e171cd7]
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:56:44 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@6e171cd7]
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:58:13 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@6e171cd7]
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:59:18 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:59:28 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@6e171cd7]
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:59:29 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.AopTest$UserServiceForAop@6e171cd7]
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.AopTest$UserServiceForAop.update()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.AopTest$UserServiceForAop.query()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 15:59:57 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 16:03:23 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 16:03:23 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 16:03:23 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.TransactionAopTest$UserService@79698539]
2020-07-08 17:55:55 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.TransactionAopTest$UserService.update()
2020-07-08 17:55:55 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.TransactionAopTest$UserService.query()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 17:55:55 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 17:55:55 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 17:55:55 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.aop.TransactionAopTest$UserService.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 17:55:55 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 17:55:55 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 17:55:56 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(759) | Initiating transaction commit
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(269) | Committing JDBC transaction on Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java]
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(327) | Releasing JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] after transaction
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(327) | Returning JDBC Connection to DataSource
2020-07-08 17:55:56 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 17:55:56 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.aop.TransactionAopTest$UserService.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.core.JdbcTemplate.update(522) | Executing SQL update [update ds.tbDict set nCode = nCode+1]
2020-07-08 17:55:56 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemProperties] PropertySource with lowest search precedence
2020-07-08 17:55:56 DEBUG [main] org.springframework.core.env.MutablePropertySources.addLast(109) | Adding [systemEnvironment] PropertySource with lowest search precedence
2020-07-08 17:55:56 DEBUG [main] org.springframework.core.env.AbstractEnvironment.<init>(124) | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2020-07-08 17:55:56 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317) | Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73) | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.xml.BeansDtdResolver.resolveEntity(74) | Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans-2.0.dtd
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(92) | Loading bean definitions
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'DB2'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'DB2'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'DB2' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'DB2'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Derby'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Derby'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Derby' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Derby'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'H2'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'H2'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'H2' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'H2'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'HSQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'HSQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'HSQL' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'HSQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Informix'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Informix'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Informix' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Informix'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'MS-SQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'MS-SQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'MS-SQL' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'MS-SQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'MySQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'MySQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'MySQL' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'MySQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Oracle'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Oracle'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Oracle' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Oracle'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'PostgreSQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'PostgreSQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'PostgreSQL' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'PostgreSQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Sybase'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Sybase'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Sybase' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Sybase'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221) | Creating shared instance of singleton bean 'Hana'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448) | Creating instance of bean 'Hana'
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529) | Eagerly caching bean 'Hana' to allow for resolving potential circular references
2020-07-08 17:55:56 DEBUG [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484) | Finished creating instance of bean 'Hana'
2020-07-08 17:55:56 INFO [main] org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(126) | SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(199) | Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp.BasicDataSource@7dc222ae]
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(217) | Database product name cached for DataSource [org.apache.commons.dbcp.BasicDataSource@7dc222ae]: name is 'MySQL'
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(175) | SQL error codes for 'MySQL' found
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.logTranslation(397) | Translating SQLException with SQL state '42S02', error code '1146', message [Table 'ds.tbdict' doesn't exist]; SQL was [update ds.tbDict set nCode = nCode+1] for task [StatementCallback]
2020-07-08 17:55:56 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(851) | Initiating transaction rollback
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(284) | Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java]
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(327) | Releasing JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] after transaction
2020-07-08 17:55:56 DEBUG [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(327) | Returning JDBC Connection to DataSource
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.TransactionAopTest$UserService@79698539]
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.TransactionAopTest$UserService.update()
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.TransactionAopTest$UserService.query()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 18:04:00 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.aop.TransactionAopTest$UserService.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(759) | Initiating transaction commit
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(269) | Committing JDBC transaction on Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java]
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(327) | Releasing JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] after transaction
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(327) | Returning JDBC Connection to DataSource
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(367) | Creating new transaction with name [com.palace.seeds.spring.aop.TransactionAopTest$UserService.update]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(206) | Acquired Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(223) | Switching JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.core.JdbcTemplate.update(522) | Executing SQL update [update ds.tbDict set nCode = nCode+1]
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(529) | SQL update affected 1 rows
2020-07-08 18:04:00 DEBUG [main] org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(851) | Initiating transaction rollback
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(284) | Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java]
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(327) | Releasing JDBC Connection [jdbc:mysql://localhost:3306/?, UserName=root@localhost, MySQL Connector Java] after transaction
2020-07-08 18:04:00 DEBUG [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(327) | Returning JDBC Connection to DataSource
2020-07-08 18:23:33 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.TransactionAopTest$UserService@47d90b9e]
2020-07-08 18:27:08 DEBUG [main] org.springframework.aop.framework.CglibAopProxy.getProxy(159) | Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.palace.seeds.spring.aop.TransactionAopTest$UserService@72a7c7e0]
2020-07-08 18:31:26 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public void com.palace.seeds.spring.aop.TransactionAopTest$UserService.update()
2020-07-08 18:31:26 DEBUG [main] org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(108) | Adding transactional method 'UserService.query' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String com.palace.seeds.spring.aop.TransactionAopTest$UserService.query()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(797) | Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(802) | Found 'hashCode' method: public native int java.lang.Object.hashCode()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(833) | Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2020-07-08 18:31:26 DEBUG [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(791) | Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
